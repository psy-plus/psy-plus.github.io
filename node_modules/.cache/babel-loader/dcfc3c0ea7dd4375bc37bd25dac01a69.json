{"ast":null,"code":"import \"core-js/modules/es.array.unshift.js\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { INTERNAL_COL_DEFINE } from './utils/legacyUtil';\n\nfunction ColGroup(_ref) {\n  var colWidths = _ref.colWidths,\n      columns = _ref.columns,\n      columCount = _ref.columCount;\n  var cols = [];\n  var len = columCount || columns.length; // Only insert col with width & additional props\n  // Skip if rest col do not have any useful info\n\n  var mustInsert = false;\n\n  for (var i = len - 1; i >= 0; i -= 1) {\n    var width = colWidths[i];\n    var column = columns && columns[i];\n    var additionalProps = column && column[INTERNAL_COL_DEFINE];\n\n    if (width || additionalProps || mustInsert) {\n      var _a = additionalProps || {},\n          columnType = _a.columnType,\n          restAdditionalProps = __rest(_a, [\"columnType\"]);\n\n      cols.unshift(_createVNode(\"col\", _objectSpread({\n        \"key\": i,\n        \"style\": {\n          width: typeof width === 'number' ? \"\".concat(width, \"px\") : width\n        }\n      }, restAdditionalProps), null));\n      mustInsert = true;\n    }\n  }\n\n  return _createVNode(\"colgroup\", null, [cols]);\n}\n\nexport default ColGroup;","map":{"version":3,"names":["_objectSpread","createVNode","_createVNode","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","INTERNAL_COL_DEFINE","ColGroup","_ref","colWidths","columns","columCount","cols","len","mustInsert","width","column","additionalProps","_a","columnType","restAdditionalProps","unshift","concat"],"sources":["/Users/cinder/Desktop/psyplusweb/node_modules/ant-design-vue/es/vc-table/ColGroup.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport { createVNode as _createVNode } from \"vue\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { INTERNAL_COL_DEFINE } from './utils/legacyUtil';\n\nfunction ColGroup(_ref) {\n  var colWidths = _ref.colWidths,\n      columns = _ref.columns,\n      columCount = _ref.columCount;\n  var cols = [];\n  var len = columCount || columns.length; // Only insert col with width & additional props\n  // Skip if rest col do not have any useful info\n\n  var mustInsert = false;\n\n  for (var i = len - 1; i >= 0; i -= 1) {\n    var width = colWidths[i];\n    var column = columns && columns[i];\n    var additionalProps = column && column[INTERNAL_COL_DEFINE];\n\n    if (width || additionalProps || mustInsert) {\n      var _a = additionalProps || {},\n          columnType = _a.columnType,\n          restAdditionalProps = __rest(_a, [\"columnType\"]);\n\n      cols.unshift(_createVNode(\"col\", _objectSpread({\n        \"key\": i,\n        \"style\": {\n          width: typeof width === 'number' ? \"\".concat(width, \"px\") : width\n        }\n      }, restAdditionalProps), null));\n      mustInsert = true;\n    }\n  }\n\n  return _createVNode(\"colgroup\", null, [cols]);\n}\n\nexport default ColGroup;"],"mappings":";AAAA,OAAOA,aAAP,MAA0B,0CAA1B;AACA,SAASC,WAAW,IAAIC,YAAxB,QAA4C,KAA5C;;AAEA,IAAIC,MAAM,GAAG,QAAQ,KAAKA,MAAb,IAAuB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;EAClD,IAAIC,CAAC,GAAG,EAAR;;EAEA,KAAK,IAAIC,CAAT,IAAcH,CAAd,EAAiB;IACf,IAAII,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCP,CAArC,EAAwCG,CAAxC,KAA8CF,CAAC,CAACO,OAAF,CAAUL,CAAV,IAAe,CAAjE,EAAoED,CAAC,CAACC,CAAD,CAAD,GAAOH,CAAC,CAACG,CAAD,CAAR;EACrE;;EAED,IAAIH,CAAC,IAAI,IAAL,IAAa,OAAOI,MAAM,CAACK,qBAAd,KAAwC,UAAzD,EAAqE,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWP,CAAC,GAAGC,MAAM,CAACK,qBAAP,CAA6BT,CAA7B,CAApB,EAAqDU,CAAC,GAAGP,CAAC,CAACQ,MAA3D,EAAmED,CAAC,EAApE,EAAwE;IAC3I,IAAIT,CAAC,CAACO,OAAF,CAAUL,CAAC,CAACO,CAAD,CAAX,IAAkB,CAAlB,IAAuBN,MAAM,CAACC,SAAP,CAAiBO,oBAAjB,CAAsCL,IAAtC,CAA2CP,CAA3C,EAA8CG,CAAC,CAACO,CAAD,CAA/C,CAA3B,EAAgFR,CAAC,CAACC,CAAC,CAACO,CAAD,CAAF,CAAD,GAAUV,CAAC,CAACG,CAAC,CAACO,CAAD,CAAF,CAAX;EACjF;EACD,OAAOR,CAAP;AACD,CAXD;;AAaA,SAASW,mBAAT,QAAoC,oBAApC;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;EACtB,IAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;EAAA,IACIC,OAAO,GAAGF,IAAI,CAACE,OADnB;EAAA,IAEIC,UAAU,GAAGH,IAAI,CAACG,UAFtB;EAGA,IAAIC,IAAI,GAAG,EAAX;EACA,IAAIC,GAAG,GAAGF,UAAU,IAAID,OAAO,CAACN,MAAhC,CALsB,CAKkB;EACxC;;EAEA,IAAIU,UAAU,GAAG,KAAjB;;EAEA,KAAK,IAAIX,CAAC,GAAGU,GAAG,GAAG,CAAnB,EAAsBV,CAAC,IAAI,CAA3B,EAA8BA,CAAC,IAAI,CAAnC,EAAsC;IACpC,IAAIY,KAAK,GAAGN,SAAS,CAACN,CAAD,CAArB;IACA,IAAIa,MAAM,GAAGN,OAAO,IAAIA,OAAO,CAACP,CAAD,CAA/B;IACA,IAAIc,eAAe,GAAGD,MAAM,IAAIA,MAAM,CAACV,mBAAD,CAAtC;;IAEA,IAAIS,KAAK,IAAIE,eAAT,IAA4BH,UAAhC,EAA4C;MAC1C,IAAII,EAAE,GAAGD,eAAe,IAAI,EAA5B;MAAA,IACIE,UAAU,GAAGD,EAAE,CAACC,UADpB;MAAA,IAEIC,mBAAmB,GAAG5B,MAAM,CAAC0B,EAAD,EAAK,CAAC,YAAD,CAAL,CAFhC;;MAIAN,IAAI,CAACS,OAAL,CAAa9B,YAAY,CAAC,KAAD,EAAQF,aAAa,CAAC;QAC7C,OAAOc,CADsC;QAE7C,SAAS;UACPY,KAAK,EAAE,OAAOA,KAAP,KAAiB,QAAjB,GAA4B,GAAGO,MAAH,CAAUP,KAAV,EAAiB,IAAjB,CAA5B,GAAqDA;QADrD;MAFoC,CAAD,EAK3CK,mBAL2C,CAArB,EAKA,IALA,CAAzB;MAMAN,UAAU,GAAG,IAAb;IACD;EACF;;EAED,OAAOvB,YAAY,CAAC,UAAD,EAAa,IAAb,EAAmB,CAACqB,IAAD,CAAnB,CAAnB;AACD;;AAED,eAAeL,QAAf"},"metadata":{},"sourceType":"module"}