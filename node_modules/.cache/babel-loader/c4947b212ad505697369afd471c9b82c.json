{"ast":null,"code":"import { computed, inject, provide } from 'vue';\nvar TriggerContextKey = Symbol('TriggerContextKey');\nexport var useProviderTrigger = function useProviderTrigger() {\n  var portal = null;\n  provide(TriggerContextKey, {\n    setPortal: function setPortal(val) {\n      portal = val;\n    },\n    popPortal: true\n  });\n  return function () {\n    return portal;\n  };\n};\nexport var useInjectTrigger = function useInjectTrigger() {\n  return inject(TriggerContextKey, {\n    setPortal: function setPortal() {},\n    popPortal: false\n  });\n};\nvar PortalContextKey = Symbol('PortalContextKey');\nexport var useProvidePortal = function useProvidePortal(instance) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    inTriggerContext: true\n  };\n  provide(PortalContextKey, {\n    inTriggerContext: config.inTriggerContext,\n    shouldRender: computed(function () {\n      var _ref = instance || {},\n          sPopupVisible = _ref.sPopupVisible,\n          popupRef = _ref.popupRef,\n          forceRender = _ref.forceRender,\n          autoDestroy = _ref.autoDestroy; // if (popPortal) return true;\n\n\n      var shouldRender = false;\n\n      if (sPopupVisible || popupRef || forceRender) {\n        shouldRender = true;\n      }\n\n      if (!sPopupVisible && autoDestroy) {\n        shouldRender = false;\n      }\n\n      return shouldRender;\n    })\n  });\n};\nexport var useInjectPortal = function useInjectPortal() {\n  useProvidePortal({}, {\n    inTriggerContext: false\n  });\n  var portalContext = inject(PortalContextKey, {\n    shouldRender: computed(function () {\n      return false;\n    }),\n    inTriggerContext: false\n  });\n  return {\n    shouldRender: computed(function () {\n      return portalContext.shouldRender.value || portalContext.inTriggerContext === false;\n    })\n  };\n};","map":{"version":3,"names":["computed","inject","provide","TriggerContextKey","Symbol","useProviderTrigger","portal","setPortal","val","popPortal","useInjectTrigger","PortalContextKey","useProvidePortal","instance","config","arguments","length","undefined","inTriggerContext","shouldRender","_ref","sPopupVisible","popupRef","forceRender","autoDestroy","useInjectPortal","portalContext","value"],"sources":["/Users/cinder/Desktop/psyplusweb/node_modules/ant-design-vue/es/vc-trigger/context.js"],"sourcesContent":["import { computed, inject, provide } from 'vue';\nvar TriggerContextKey = Symbol('TriggerContextKey');\nexport var useProviderTrigger = function useProviderTrigger() {\n  var portal = null;\n  provide(TriggerContextKey, {\n    setPortal: function setPortal(val) {\n      portal = val;\n    },\n    popPortal: true\n  });\n  return function () {\n    return portal;\n  };\n};\nexport var useInjectTrigger = function useInjectTrigger() {\n  return inject(TriggerContextKey, {\n    setPortal: function setPortal() {},\n    popPortal: false\n  });\n};\nvar PortalContextKey = Symbol('PortalContextKey');\nexport var useProvidePortal = function useProvidePortal(instance) {\n  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    inTriggerContext: true\n  };\n  provide(PortalContextKey, {\n    inTriggerContext: config.inTriggerContext,\n    shouldRender: computed(function () {\n      var _ref = instance || {},\n          sPopupVisible = _ref.sPopupVisible,\n          popupRef = _ref.popupRef,\n          forceRender = _ref.forceRender,\n          autoDestroy = _ref.autoDestroy; // if (popPortal) return true;\n\n\n      var shouldRender = false;\n\n      if (sPopupVisible || popupRef || forceRender) {\n        shouldRender = true;\n      }\n\n      if (!sPopupVisible && autoDestroy) {\n        shouldRender = false;\n      }\n\n      return shouldRender;\n    })\n  });\n};\nexport var useInjectPortal = function useInjectPortal() {\n  useProvidePortal({}, {\n    inTriggerContext: false\n  });\n  var portalContext = inject(PortalContextKey, {\n    shouldRender: computed(function () {\n      return false;\n    }),\n    inTriggerContext: false\n  });\n  return {\n    shouldRender: computed(function () {\n      return portalContext.shouldRender.value || portalContext.inTriggerContext === false;\n    })\n  };\n};"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,OAA3B,QAA0C,KAA1C;AACA,IAAIC,iBAAiB,GAAGC,MAAM,CAAC,mBAAD,CAA9B;AACA,OAAO,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,GAA8B;EAC5D,IAAIC,MAAM,GAAG,IAAb;EACAJ,OAAO,CAACC,iBAAD,EAAoB;IACzBI,SAAS,EAAE,SAASA,SAAT,CAAmBC,GAAnB,EAAwB;MACjCF,MAAM,GAAGE,GAAT;IACD,CAHwB;IAIzBC,SAAS,EAAE;EAJc,CAApB,CAAP;EAMA,OAAO,YAAY;IACjB,OAAOH,MAAP;EACD,CAFD;AAGD,CAXM;AAYP,OAAO,IAAII,gBAAgB,GAAG,SAASA,gBAAT,GAA4B;EACxD,OAAOT,MAAM,CAACE,iBAAD,EAAoB;IAC/BI,SAAS,EAAE,SAASA,SAAT,GAAqB,CAAE,CADH;IAE/BE,SAAS,EAAE;EAFoB,CAApB,CAAb;AAID,CALM;AAMP,IAAIE,gBAAgB,GAAGP,MAAM,CAAC,kBAAD,CAA7B;AACA,OAAO,IAAIQ,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,QAA1B,EAAoC;EAChE,IAAIC,MAAM,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE;IAC/EG,gBAAgB,EAAE;EAD6D,CAAjF;EAGAhB,OAAO,CAACS,gBAAD,EAAmB;IACxBO,gBAAgB,EAAEJ,MAAM,CAACI,gBADD;IAExBC,YAAY,EAAEnB,QAAQ,CAAC,YAAY;MACjC,IAAIoB,IAAI,GAAGP,QAAQ,IAAI,EAAvB;MAAA,IACIQ,aAAa,GAAGD,IAAI,CAACC,aADzB;MAAA,IAEIC,QAAQ,GAAGF,IAAI,CAACE,QAFpB;MAAA,IAGIC,WAAW,GAAGH,IAAI,CAACG,WAHvB;MAAA,IAIIC,WAAW,GAAGJ,IAAI,CAACI,WAJvB,CADiC,CAKG;;;MAGpC,IAAIL,YAAY,GAAG,KAAnB;;MAEA,IAAIE,aAAa,IAAIC,QAAjB,IAA6BC,WAAjC,EAA8C;QAC5CJ,YAAY,GAAG,IAAf;MACD;;MAED,IAAI,CAACE,aAAD,IAAkBG,WAAtB,EAAmC;QACjCL,YAAY,GAAG,KAAf;MACD;;MAED,OAAOA,YAAP;IACD,CAnBqB;EAFE,CAAnB,CAAP;AAuBD,CA3BM;AA4BP,OAAO,IAAIM,eAAe,GAAG,SAASA,eAAT,GAA2B;EACtDb,gBAAgB,CAAC,EAAD,EAAK;IACnBM,gBAAgB,EAAE;EADC,CAAL,CAAhB;EAGA,IAAIQ,aAAa,GAAGzB,MAAM,CAACU,gBAAD,EAAmB;IAC3CQ,YAAY,EAAEnB,QAAQ,CAAC,YAAY;MACjC,OAAO,KAAP;IACD,CAFqB,CADqB;IAI3CkB,gBAAgB,EAAE;EAJyB,CAAnB,CAA1B;EAMA,OAAO;IACLC,YAAY,EAAEnB,QAAQ,CAAC,YAAY;MACjC,OAAO0B,aAAa,CAACP,YAAd,CAA2BQ,KAA3B,IAAoCD,aAAa,CAACR,gBAAd,KAAmC,KAA9E;IACD,CAFqB;EADjB,CAAP;AAKD,CAfM"},"metadata":{},"sourceType":"module"}