{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { toArray } from './typeUtil';\nimport get from '../../vc-util/get';\nimport set from '../../vc-util/set';\n/**\n * Convert name to internal supported format.\n * This function should keep since we still thinking if need support like `a.b.c` format.\n * 'a' => ['a']\n * 123 => [123]\n * ['a', 123] => ['a', 123]\n */\n\nexport function getNamePath(path) {\n  return toArray(path);\n}\nexport function getValue(store, namePath) {\n  var value = get(store, namePath);\n  return value;\n}\nexport function setValue(store, namePath, value) {\n  var removeIfUndefined = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var newStore = set(store, namePath, value, removeIfUndefined);\n  return newStore;\n}\nexport function containsNamePath(namePathList, namePath) {\n  return namePathList && namePathList.some(function (path) {\n    return matchNamePath(path, namePath);\n  });\n}\n\nfunction isObject(obj) {\n  return _typeof(obj) === 'object' && obj !== null && Object.getPrototypeOf(obj) === Object.prototype;\n}\n/**\n * Copy values into store and return a new values object\n * ({ a: 1, b: { c: 2 } }, { a: 4, b: { d: 5 } }) => { a: 4, b: { c: 2, d: 5 } }\n */\n\n\nfunction internalSetValues(store, values) {\n  var newStore = Array.isArray(store) ? _toConsumableArray(store) : _extends({}, store);\n\n  if (!values) {\n    return newStore;\n  }\n\n  Object.keys(values).forEach(function (key) {\n    var prevValue = newStore[key];\n    var value = values[key]; // If both are object (but target is not array), we use recursion to set deep value\n\n    var recursive = isObject(prevValue) && isObject(value);\n    newStore[key] = recursive ? internalSetValues(prevValue, value || {}) : value;\n  });\n  return newStore;\n}\n\nexport function setValues(store) {\n  for (var _len = arguments.length, restValues = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    restValues[_key - 1] = arguments[_key];\n  }\n\n  return restValues.reduce(function (current, newStore) {\n    return internalSetValues(current, newStore);\n  }, store);\n}\nexport function cloneByNamePathList(store, namePathList) {\n  var newStore = {};\n  namePathList.forEach(function (namePath) {\n    var value = getValue(store, namePath);\n    newStore = setValue(newStore, namePath, value);\n  });\n  return newStore;\n}\nexport function matchNamePath(namePath, changedNamePath) {\n  if (!namePath || !changedNamePath || namePath.length !== changedNamePath.length) {\n    return false;\n  }\n\n  return namePath.every(function (nameUnit, i) {\n    return changedNamePath[i] === nameUnit;\n  });\n}","map":{"version":3,"names":["_extends","_toConsumableArray","_typeof","toArray","get","set","getNamePath","path","getValue","store","namePath","value","setValue","removeIfUndefined","arguments","length","undefined","newStore","containsNamePath","namePathList","some","matchNamePath","isObject","obj","Object","getPrototypeOf","prototype","internalSetValues","values","Array","isArray","keys","forEach","key","prevValue","recursive","setValues","_len","restValues","_key","reduce","current","cloneByNamePathList","changedNamePath","every","nameUnit","i"],"sources":["/Users/cinder/Desktop/psyplusweb/node_modules/ant-design-vue/es/form/utils/valueUtil.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { toArray } from './typeUtil';\nimport get from '../../vc-util/get';\nimport set from '../../vc-util/set';\n/**\n * Convert name to internal supported format.\n * This function should keep since we still thinking if need support like `a.b.c` format.\n * 'a' => ['a']\n * 123 => [123]\n * ['a', 123] => ['a', 123]\n */\n\nexport function getNamePath(path) {\n  return toArray(path);\n}\nexport function getValue(store, namePath) {\n  var value = get(store, namePath);\n  return value;\n}\nexport function setValue(store, namePath, value) {\n  var removeIfUndefined = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  var newStore = set(store, namePath, value, removeIfUndefined);\n  return newStore;\n}\nexport function containsNamePath(namePathList, namePath) {\n  return namePathList && namePathList.some(function (path) {\n    return matchNamePath(path, namePath);\n  });\n}\n\nfunction isObject(obj) {\n  return _typeof(obj) === 'object' && obj !== null && Object.getPrototypeOf(obj) === Object.prototype;\n}\n/**\n * Copy values into store and return a new values object\n * ({ a: 1, b: { c: 2 } }, { a: 4, b: { d: 5 } }) => { a: 4, b: { c: 2, d: 5 } }\n */\n\n\nfunction internalSetValues(store, values) {\n  var newStore = Array.isArray(store) ? _toConsumableArray(store) : _extends({}, store);\n\n  if (!values) {\n    return newStore;\n  }\n\n  Object.keys(values).forEach(function (key) {\n    var prevValue = newStore[key];\n    var value = values[key]; // If both are object (but target is not array), we use recursion to set deep value\n\n    var recursive = isObject(prevValue) && isObject(value);\n    newStore[key] = recursive ? internalSetValues(prevValue, value || {}) : value;\n  });\n  return newStore;\n}\n\nexport function setValues(store) {\n  for (var _len = arguments.length, restValues = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    restValues[_key - 1] = arguments[_key];\n  }\n\n  return restValues.reduce(function (current, newStore) {\n    return internalSetValues(current, newStore);\n  }, store);\n}\nexport function cloneByNamePathList(store, namePathList) {\n  var newStore = {};\n  namePathList.forEach(function (namePath) {\n    var value = getValue(store, namePath);\n    newStore = setValue(newStore, namePath, value);\n  });\n  return newStore;\n}\nexport function matchNamePath(namePath, changedNamePath) {\n  if (!namePath || !changedNamePath || namePath.length !== changedNamePath.length) {\n    return false;\n  }\n\n  return namePath.every(function (nameUnit, i) {\n    return changedNamePath[i] === nameUnit;\n  });\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}