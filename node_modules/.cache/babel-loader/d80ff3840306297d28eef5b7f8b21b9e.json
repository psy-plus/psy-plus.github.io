{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar Record;\n\n(function (Record) {\n  Record[Record[\"None\"] = 0] = \"None\";\n  Record[Record[\"Start\"] = 1] = \"Start\";\n  Record[Record[\"End\"] = 2] = \"End\";\n})(Record || (Record = {}));\n\nfunction traverseNodesKey(treeData, fieldNames, callback) {\n  function processNode(dataNode) {\n    var key = dataNode[fieldNames.key];\n    var children = dataNode[fieldNames.children];\n\n    if (callback(key, dataNode) !== false) {\n      traverseNodesKey(children || [], fieldNames, callback);\n    }\n  }\n\n  treeData.forEach(processNode);\n}\n/** 计算选中范围，只考虑expanded情况以优化性能 */\n\n\nexport function calcRangeKeys(_ref) {\n  var treeData = _ref.treeData,\n      expandedKeys = _ref.expandedKeys,\n      startKey = _ref.startKey,\n      endKey = _ref.endKey,\n      _ref$fieldNames = _ref.fieldNames,\n      fieldNames = _ref$fieldNames === void 0 ? {\n    title: 'title',\n    key: 'key',\n    children: 'children'\n  } : _ref$fieldNames;\n  var keys = [];\n  var record = Record.None;\n\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n\n  if (!startKey || !endKey) {\n    return [];\n  }\n\n  function matchKey(key) {\n    return key === startKey || key === endKey;\n  }\n\n  traverseNodesKey(treeData, fieldNames, function (key) {\n    if (record === Record.End) {\n      return false;\n    }\n\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n\n      if (record === Record.None) {\n        record = Record.Start;\n      } else if (record === Record.Start) {\n        record = Record.End;\n        return false;\n      }\n    } else if (record === Record.Start) {\n      // Append selection\n      keys.push(key);\n    }\n\n    if (expandedKeys.indexOf(key) === -1) {\n      return false;\n    }\n\n    return true;\n  });\n  return keys;\n}\nexport function convertDirectoryKeysToNodes(treeData, keys, fieldNames) {\n  var restKeys = _toConsumableArray(keys);\n\n  var nodes = [];\n  traverseNodesKey(treeData, fieldNames, function (key, node) {\n    var index = restKeys.indexOf(key);\n\n    if (index !== -1) {\n      nodes.push(node);\n      restKeys.splice(index, 1);\n    }\n\n    return !!restKeys.length;\n  });\n  return nodes;\n}","map":{"version":3,"names":["_toConsumableArray","Record","traverseNodesKey","treeData","fieldNames","callback","processNode","dataNode","key","children","forEach","calcRangeKeys","_ref","expandedKeys","startKey","endKey","_ref$fieldNames","title","keys","record","None","matchKey","End","push","Start","indexOf","convertDirectoryKeysToNodes","restKeys","nodes","node","index","splice","length"],"sources":["/Users/cinder/Desktop/Psy+/psyplusweb/node_modules/ant-design-vue/es/tree/utils/dictUtil.js"],"sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nvar Record;\n\n(function (Record) {\n  Record[Record[\"None\"] = 0] = \"None\";\n  Record[Record[\"Start\"] = 1] = \"Start\";\n  Record[Record[\"End\"] = 2] = \"End\";\n})(Record || (Record = {}));\n\nfunction traverseNodesKey(treeData, fieldNames, callback) {\n  function processNode(dataNode) {\n    var key = dataNode[fieldNames.key];\n    var children = dataNode[fieldNames.children];\n\n    if (callback(key, dataNode) !== false) {\n      traverseNodesKey(children || [], fieldNames, callback);\n    }\n  }\n\n  treeData.forEach(processNode);\n}\n/** 计算选中范围，只考虑expanded情况以优化性能 */\n\n\nexport function calcRangeKeys(_ref) {\n  var treeData = _ref.treeData,\n      expandedKeys = _ref.expandedKeys,\n      startKey = _ref.startKey,\n      endKey = _ref.endKey,\n      _ref$fieldNames = _ref.fieldNames,\n      fieldNames = _ref$fieldNames === void 0 ? {\n    title: 'title',\n    key: 'key',\n    children: 'children'\n  } : _ref$fieldNames;\n  var keys = [];\n  var record = Record.None;\n\n  if (startKey && startKey === endKey) {\n    return [startKey];\n  }\n\n  if (!startKey || !endKey) {\n    return [];\n  }\n\n  function matchKey(key) {\n    return key === startKey || key === endKey;\n  }\n\n  traverseNodesKey(treeData, fieldNames, function (key) {\n    if (record === Record.End) {\n      return false;\n    }\n\n    if (matchKey(key)) {\n      // Match test\n      keys.push(key);\n\n      if (record === Record.None) {\n        record = Record.Start;\n      } else if (record === Record.Start) {\n        record = Record.End;\n        return false;\n      }\n    } else if (record === Record.Start) {\n      // Append selection\n      keys.push(key);\n    }\n\n    if (expandedKeys.indexOf(key) === -1) {\n      return false;\n    }\n\n    return true;\n  });\n  return keys;\n}\nexport function convertDirectoryKeysToNodes(treeData, keys, fieldNames) {\n  var restKeys = _toConsumableArray(keys);\n\n  var nodes = [];\n  traverseNodesKey(treeData, fieldNames, function (key, node) {\n    var index = restKeys.indexOf(key);\n\n    if (index !== -1) {\n      nodes.push(node);\n      restKeys.splice(index, 1);\n    }\n\n    return !!restKeys.length;\n  });\n  return nodes;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}