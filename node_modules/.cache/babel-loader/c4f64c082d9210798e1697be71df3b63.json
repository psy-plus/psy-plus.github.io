{"ast":null,"code":"import { toRaw, shallowRef, watchEffect, watch } from 'vue';\nimport { convertChildrenToData } from '../utils/legacyUtil';\n/**\n * Parse `children` to `options` if `options` is not provided.\n * Then flatten the `options`.\n */\n\nexport default function useOptions(options, children, fieldNames) {\n  var mergedOptions = shallowRef();\n  var valueOptions = shallowRef();\n  var labelOptions = shallowRef();\n  var tempMergedOptions = shallowRef([]);\n  watch([options, children], function () {\n    if (options.value) {\n      tempMergedOptions.value = toRaw(options.value).slice();\n    } else {\n      tempMergedOptions.value = convertChildrenToData(children.value);\n    }\n  }, {\n    immediate: true,\n    deep: true\n  });\n  watchEffect(function () {\n    var newOptions = tempMergedOptions.value;\n    var newValueOptions = new Map();\n    var newLabelOptions = new Map();\n    var fieldNamesValue = fieldNames.value;\n\n    function dig(optionList) {\n      var isChildren = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false; // for loop to speed up collection speed\n\n      for (var i = 0; i < optionList.length; i += 1) {\n        var option = optionList[i];\n\n        if (!option[fieldNamesValue.options] || isChildren) {\n          newValueOptions.set(option[fieldNamesValue.value], option);\n          newLabelOptions.set(option[fieldNamesValue.label], option);\n        } else {\n          dig(option[fieldNamesValue.options], true);\n        }\n      }\n    }\n\n    dig(newOptions);\n    mergedOptions.value = newOptions;\n    valueOptions.value = newValueOptions;\n    labelOptions.value = newLabelOptions;\n  });\n  return {\n    options: mergedOptions,\n    valueOptions: valueOptions,\n    labelOptions: labelOptions\n  };\n}","map":{"version":3,"names":["toRaw","shallowRef","watchEffect","watch","convertChildrenToData","useOptions","options","children","fieldNames","mergedOptions","valueOptions","labelOptions","tempMergedOptions","value","slice","immediate","deep","newOptions","newValueOptions","Map","newLabelOptions","fieldNamesValue","dig","optionList","isChildren","arguments","length","undefined","i","option","set","label"],"sources":["/Users/cinder/Desktop/psyplusweb/node_modules/ant-design-vue/es/vc-select/hooks/useOptions.js"],"sourcesContent":["import { toRaw, shallowRef, watchEffect, watch } from 'vue';\nimport { convertChildrenToData } from '../utils/legacyUtil';\n/**\n * Parse `children` to `options` if `options` is not provided.\n * Then flatten the `options`.\n */\n\nexport default function useOptions(options, children, fieldNames) {\n  var mergedOptions = shallowRef();\n  var valueOptions = shallowRef();\n  var labelOptions = shallowRef();\n  var tempMergedOptions = shallowRef([]);\n  watch([options, children], function () {\n    if (options.value) {\n      tempMergedOptions.value = toRaw(options.value).slice();\n    } else {\n      tempMergedOptions.value = convertChildrenToData(children.value);\n    }\n  }, {\n    immediate: true,\n    deep: true\n  });\n  watchEffect(function () {\n    var newOptions = tempMergedOptions.value;\n    var newValueOptions = new Map();\n    var newLabelOptions = new Map();\n    var fieldNamesValue = fieldNames.value;\n\n    function dig(optionList) {\n      var isChildren = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      // for loop to speed up collection speed\n      for (var i = 0; i < optionList.length; i += 1) {\n        var option = optionList[i];\n\n        if (!option[fieldNamesValue.options] || isChildren) {\n          newValueOptions.set(option[fieldNamesValue.value], option);\n          newLabelOptions.set(option[fieldNamesValue.label], option);\n        } else {\n          dig(option[fieldNamesValue.options], true);\n        }\n      }\n    }\n\n    dig(newOptions);\n    mergedOptions.value = newOptions;\n    valueOptions.value = newValueOptions;\n    labelOptions.value = newLabelOptions;\n  });\n  return {\n    options: mergedOptions,\n    valueOptions: valueOptions,\n    labelOptions: labelOptions\n  };\n}"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,UAAhB,EAA4BC,WAA5B,EAAyCC,KAAzC,QAAsD,KAAtD;AACA,SAASC,qBAAT,QAAsC,qBAAtC;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,UAAT,CAAoBC,OAApB,EAA6BC,QAA7B,EAAuCC,UAAvC,EAAmD;EAChE,IAAIC,aAAa,GAAGR,UAAU,EAA9B;EACA,IAAIS,YAAY,GAAGT,UAAU,EAA7B;EACA,IAAIU,YAAY,GAAGV,UAAU,EAA7B;EACA,IAAIW,iBAAiB,GAAGX,UAAU,CAAC,EAAD,CAAlC;EACAE,KAAK,CAAC,CAACG,OAAD,EAAUC,QAAV,CAAD,EAAsB,YAAY;IACrC,IAAID,OAAO,CAACO,KAAZ,EAAmB;MACjBD,iBAAiB,CAACC,KAAlB,GAA0Bb,KAAK,CAACM,OAAO,CAACO,KAAT,CAAL,CAAqBC,KAArB,EAA1B;IACD,CAFD,MAEO;MACLF,iBAAiB,CAACC,KAAlB,GAA0BT,qBAAqB,CAACG,QAAQ,CAACM,KAAV,CAA/C;IACD;EACF,CANI,EAMF;IACDE,SAAS,EAAE,IADV;IAEDC,IAAI,EAAE;EAFL,CANE,CAAL;EAUAd,WAAW,CAAC,YAAY;IACtB,IAAIe,UAAU,GAAGL,iBAAiB,CAACC,KAAnC;IACA,IAAIK,eAAe,GAAG,IAAIC,GAAJ,EAAtB;IACA,IAAIC,eAAe,GAAG,IAAID,GAAJ,EAAtB;IACA,IAAIE,eAAe,GAAGb,UAAU,CAACK,KAAjC;;IAEA,SAASS,GAAT,CAAaC,UAAb,EAAyB;MACvB,IAAIC,UAAU,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAArF,CADuB,CAGvB;;MACA,KAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,UAAU,CAACG,MAA/B,EAAuCE,CAAC,IAAI,CAA5C,EAA+C;QAC7C,IAAIC,MAAM,GAAGN,UAAU,CAACK,CAAD,CAAvB;;QAEA,IAAI,CAACC,MAAM,CAACR,eAAe,CAACf,OAAjB,CAAP,IAAoCkB,UAAxC,EAAoD;UAClDN,eAAe,CAACY,GAAhB,CAAoBD,MAAM,CAACR,eAAe,CAACR,KAAjB,CAA1B,EAAmDgB,MAAnD;UACAT,eAAe,CAACU,GAAhB,CAAoBD,MAAM,CAACR,eAAe,CAACU,KAAjB,CAA1B,EAAmDF,MAAnD;QACD,CAHD,MAGO;UACLP,GAAG,CAACO,MAAM,CAACR,eAAe,CAACf,OAAjB,CAAP,EAAkC,IAAlC,CAAH;QACD;MACF;IACF;;IAEDgB,GAAG,CAACL,UAAD,CAAH;IACAR,aAAa,CAACI,KAAd,GAAsBI,UAAtB;IACAP,YAAY,CAACG,KAAb,GAAqBK,eAArB;IACAP,YAAY,CAACE,KAAb,GAAqBO,eAArB;EACD,CA1BU,CAAX;EA2BA,OAAO;IACLd,OAAO,EAAEG,aADJ;IAELC,YAAY,EAAEA,YAFT;IAGLC,YAAY,EAAEA;EAHT,CAAP;AAKD"},"metadata":{},"sourceType":"module"}