{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\nimport { defineComponent, onBeforeUnmount, onMounted, onUpdated, ref } from 'vue';\nimport omit from '../_util/omit';\nimport initDefaultProps from '../_util/props-util/initDefaultProps';\nimport Statistic, { statisticProps } from './Statistic';\nimport { formatCountdown as formatCD } from './utils';\nvar REFRESH_INTERVAL = 1000 / 30;\n\nfunction getTime(value) {\n  return new Date(value).getTime();\n}\n\nexport var countdownProps = function countdownProps() {\n  return _extends(_extends({}, statisticProps()), {\n    value: [Number, String, Object],\n    format: String,\n    onFinish: Function,\n    onChange: Function\n  });\n};\nexport default defineComponent({\n  name: 'AStatisticCountdown',\n  props: initDefaultProps(countdownProps(), {\n    format: 'HH:mm:ss'\n  }),\n  // emits: ['finish', 'change'],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n        slots = _ref.slots;\n    var countdownId = ref();\n    var statistic = ref();\n\n    var syncTimer = function syncTimer() {\n      var value = props.value;\n      var timestamp = getTime(value);\n\n      if (timestamp >= Date.now()) {\n        startTimer();\n      } else {\n        stopTimer();\n      }\n    };\n\n    var startTimer = function startTimer() {\n      if (countdownId.value) return;\n      var timestamp = getTime(props.value);\n      countdownId.value = setInterval(function () {\n        statistic.value.$forceUpdate();\n\n        if (timestamp > Date.now()) {\n          emit('change', timestamp - Date.now());\n        }\n\n        syncTimer();\n      }, REFRESH_INTERVAL);\n    };\n\n    var stopTimer = function stopTimer() {\n      var value = props.value;\n\n      if (countdownId.value) {\n        clearInterval(countdownId.value);\n        countdownId.value = undefined;\n        var timestamp = getTime(value);\n\n        if (timestamp < Date.now()) {\n          emit('finish');\n        }\n      }\n    };\n\n    var formatCountdown = function formatCountdown(_ref2) {\n      var value = _ref2.value,\n          config = _ref2.config;\n      var format = props.format;\n      return formatCD(value, _extends(_extends({}, config), {\n        format: format\n      }));\n    };\n\n    var valueRenderHtml = function valueRenderHtml(node) {\n      return node;\n    };\n\n    onMounted(function () {\n      syncTimer();\n    });\n    onUpdated(function () {\n      syncTimer();\n    });\n    onBeforeUnmount(function () {\n      stopTimer();\n    });\n    return function () {\n      var value = props.value;\n      return _createVNode(Statistic, _objectSpread({\n        \"ref\": statistic\n      }, _extends(_extends({}, omit(props, ['onFinish', 'onChange'])), {\n        value: value,\n        valueRender: valueRenderHtml,\n        formatter: formatCountdown\n      })), slots);\n    };\n  }\n});","map":{"version":3,"names":["_objectSpread","_extends","createVNode","_createVNode","resolveDirective","_resolveDirective","defineComponent","onBeforeUnmount","onMounted","onUpdated","ref","omit","initDefaultProps","Statistic","statisticProps","formatCountdown","formatCD","REFRESH_INTERVAL","getTime","value","Date","countdownProps","Number","String","Object","format","onFinish","Function","onChange","name","props","setup","_ref","emit","slots","countdownId","statistic","syncTimer","timestamp","now","startTimer","stopTimer","setInterval","$forceUpdate","clearInterval","undefined","_ref2","config","valueRenderHtml","node","valueRender","formatter"],"sources":["/Users/cinder/Desktop/psyplusweb/node_modules/ant-design-vue/es/statistic/Countdown.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\nimport { defineComponent, onBeforeUnmount, onMounted, onUpdated, ref } from 'vue';\nimport omit from '../_util/omit';\nimport initDefaultProps from '../_util/props-util/initDefaultProps';\nimport Statistic, { statisticProps } from './Statistic';\nimport { formatCountdown as formatCD } from './utils';\nvar REFRESH_INTERVAL = 1000 / 30;\n\nfunction getTime(value) {\n  return new Date(value).getTime();\n}\n\nexport var countdownProps = function countdownProps() {\n  return _extends(_extends({}, statisticProps()), {\n    value: [Number, String, Object],\n    format: String,\n    onFinish: Function,\n    onChange: Function\n  });\n};\nexport default defineComponent({\n  name: 'AStatisticCountdown',\n  props: initDefaultProps(countdownProps(), {\n    format: 'HH:mm:ss'\n  }),\n  // emits: ['finish', 'change'],\n  setup: function setup(props, _ref) {\n    var emit = _ref.emit,\n        slots = _ref.slots;\n    var countdownId = ref();\n    var statistic = ref();\n\n    var syncTimer = function syncTimer() {\n      var value = props.value;\n      var timestamp = getTime(value);\n\n      if (timestamp >= Date.now()) {\n        startTimer();\n      } else {\n        stopTimer();\n      }\n    };\n\n    var startTimer = function startTimer() {\n      if (countdownId.value) return;\n      var timestamp = getTime(props.value);\n      countdownId.value = setInterval(function () {\n        statistic.value.$forceUpdate();\n\n        if (timestamp > Date.now()) {\n          emit('change', timestamp - Date.now());\n        }\n\n        syncTimer();\n      }, REFRESH_INTERVAL);\n    };\n\n    var stopTimer = function stopTimer() {\n      var value = props.value;\n\n      if (countdownId.value) {\n        clearInterval(countdownId.value);\n        countdownId.value = undefined;\n        var timestamp = getTime(value);\n\n        if (timestamp < Date.now()) {\n          emit('finish');\n        }\n      }\n    };\n\n    var formatCountdown = function formatCountdown(_ref2) {\n      var value = _ref2.value,\n          config = _ref2.config;\n      var format = props.format;\n      return formatCD(value, _extends(_extends({}, config), {\n        format: format\n      }));\n    };\n\n    var valueRenderHtml = function valueRenderHtml(node) {\n      return node;\n    };\n\n    onMounted(function () {\n      syncTimer();\n    });\n    onUpdated(function () {\n      syncTimer();\n    });\n    onBeforeUnmount(function () {\n      stopTimer();\n    });\n    return function () {\n      var value = props.value;\n      return _createVNode(Statistic, _objectSpread({\n        \"ref\": statistic\n      }, _extends(_extends({}, omit(props, ['onFinish', 'onChange'])), {\n        value: value,\n        valueRender: valueRenderHtml,\n        formatter: formatCountdown\n      })), slots);\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}