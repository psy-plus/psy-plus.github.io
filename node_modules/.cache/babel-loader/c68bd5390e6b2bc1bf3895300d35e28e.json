{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { createVNode as _createVNode } from \"vue\";\nimport DownOutlined from \"@ant-design/icons-vue/es/icons/DownOutlined\";\nimport { INTERNAL_COL_DEFINE } from '../../vc-table';\nimport { arrAdd, arrDel } from '../../vc-tree/util';\nimport { conductCheck } from '../../vc-tree/utils/conductUtil';\nimport { convertDataToEntities } from '../../vc-tree/utils/treeUtil';\nimport devWarning from '../../vc-util/devWarning';\nimport useMergedState from '../../_util/hooks/useMergedState';\nimport useState from '../../_util/hooks/useState';\nimport { watchEffect, computed, shallowRef } from 'vue';\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Menu from '../../menu';\nimport Radio from '../../radio';\nimport useMaxLevel from '../../vc-tree/useMaxLevel'; // TODO: warning if use ajax!!!\n\nexport var SELECTION_COLUMN = {};\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\nexport var SELECTION_NONE = 'SELECT_NONE';\nvar EMPTY_LIST = [];\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (record && _typeof(record) === 'object' && childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nexport default function useSelection(rowSelectionRef, configRef) {\n  var mergedRowSelection = computed(function () {\n    var temp = rowSelectionRef.value || {};\n    var _temp$checkStrictly = temp.checkStrictly,\n        checkStrictly = _temp$checkStrictly === void 0 ? true : _temp$checkStrictly;\n    return _extends(_extends({}, temp), {\n      checkStrictly: checkStrictly\n    });\n  }); // ========================= Keys =========================\n\n  var _useMergedState = useMergedState(mergedRowSelection.value.selectedRowKeys || mergedRowSelection.value.defaultSelectedRowKeys || EMPTY_LIST, {\n    value: computed(function () {\n      return mergedRowSelection.value.selectedRowKeys;\n    })\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1]; // ======================== Caches ========================\n\n\n  var preserveRecordsRef = shallowRef(new Map());\n\n  var updatePreserveRecordsCache = function updatePreserveRecordsCache(keys) {\n    if (mergedRowSelection.value.preserveSelectedRowKeys) {\n      var newCache = new Map(); // Keep key if mark as preserveSelectedRowKeys\n\n      keys.forEach(function (key) {\n        var record = configRef.getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.value.has(key)) {\n          record = preserveRecordsRef.value.get(key);\n        }\n\n        newCache.set(key, record);\n      }); // Refresh to new cache\n\n      preserveRecordsRef.value = newCache;\n    }\n  };\n\n  watchEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys.value);\n  });\n  var keyEntities = computed(function () {\n    return mergedRowSelection.value.checkStrictly ? null : convertDataToEntities(configRef.data.value, {\n      externalGetKey: configRef.getRowKey.value,\n      childrenPropName: configRef.childrenColumnName.value\n    }).keyEntities;\n  }); // Get flatten data\n\n  var flattedData = computed(function () {\n    return flattenData(configRef.pageData.value, configRef.childrenColumnName.value);\n  }); // Get all checkbox props\n\n  var checkboxPropsMap = computed(function () {\n    var map = new Map();\n    var getRowKey = configRef.getRowKey.value;\n    var getCheckboxProps = mergedRowSelection.value.getCheckboxProps;\n    flattedData.value.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        devWarning(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  });\n\n  var _useMaxLevel = useMaxLevel(keyEntities),\n      maxLevel = _useMaxLevel.maxLevel,\n      levelEntities = _useMaxLevel.levelEntities;\n\n  var isCheckboxDisabled = function isCheckboxDisabled(r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.value.get(configRef.getRowKey.value(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  };\n\n  var selectKeysState = computed(function () {\n    if (mergedRowSelection.value.checkStrictly) {\n      return [mergedSelectedKeys.value || [], []];\n    }\n\n    var _conductCheck = conductCheck(mergedSelectedKeys.value, true, keyEntities.value, maxLevel.value, levelEntities.value, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys || [], halfCheckedKeys];\n  });\n  var derivedSelectedKeys = computed(function () {\n    return selectKeysState.value[0];\n  });\n  var derivedHalfSelectedKeys = computed(function () {\n    return selectKeysState.value[1];\n  });\n  var derivedSelectedKeySet = computed(function () {\n    var keys = mergedRowSelection.value.type === 'radio' ? derivedSelectedKeys.value.slice(0, 1) : derivedSelectedKeys.value;\n    return new Set(keys);\n  });\n  var derivedHalfSelectedKeySet = computed(function () {\n    return mergedRowSelection.value.type === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys.value);\n  }); // Save last selected key to enable range selection\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // // Reset if rowSelection reset\n  // we use computed to reset, donot need setMergedSelectedKeys again like react\n  // https://github.com/vueComponent/ant-design-vue/issues/4885\n  // watchEffect(() => {\n  //   if (!rowSelectionRef.value) {\n  //     setMergedSelectedKeys([]);\n  //   }\n  // });\n\n\n  var setSelectedKeys = function setSelectedKeys(keys) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n    var _mergedRowSelection$v = mergedRowSelection.value,\n        preserveSelectedRowKeys = _mergedRowSelection$v.preserveSelectedRowKeys,\n        onSelectionChange = _mergedRowSelection$v.onChange;\n    var getRecordByKey = configRef.getRecordByKey;\n\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.value.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records);\n  }; // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n\n  var triggerSingleSelection = function triggerSingleSelection(key, selected, keys, event) {\n    var onSelect = mergedRowSelection.value.onSelect;\n\n    var _ref = configRef || {},\n        getRecordByKey = _ref.getRecordByKey;\n\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  };\n\n  var mergedSelections = computed(function () {\n    var _mergedRowSelection$v2 = mergedRowSelection.value,\n        onSelectInvert = _mergedRowSelection$v2.onSelectInvert,\n        onSelectNone = _mergedRowSelection$v2.onSelectNone,\n        selections = _mergedRowSelection$v2.selections,\n        hideSelectAll = _mergedRowSelection$v2.hideSelectAll;\n    var data = configRef.data,\n        pageData = configRef.pageData,\n        getRowKey = configRef.getRowKey,\n        tableLocale = configRef.locale;\n\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.value.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.value.map(function (record, index) {\n              return getRowKey.value(record, index);\n            }).filter(function (key) {\n              var checkProps = checkboxPropsMap.value.get(key);\n              return !(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled) || derivedSelectedKeySet.value.has(key);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.value.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet.value);\n            pageData.value.forEach(function (record, index) {\n              var key = getRowKey.value(record, index);\n              var checkProps = checkboxPropsMap.value.get(key);\n\n              if (!(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet.delete(key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            var keys = Array.from(keySet);\n\n            if (onSelectInvert) {\n              devWarning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n\n            setSelectedKeys(keys);\n          }\n        };\n      }\n\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.value.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet.value).filter(function (key) {\n              var checkProps = checkboxPropsMap.value.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }));\n          }\n        };\n      }\n\n      return selection;\n    });\n  });\n  var flattedDataLength = computed(function () {\n    return flattedData.value.length;\n  }); // ======================= Columns ========================\n\n  var transformColumns = function transformColumns(columns) {\n    var _a;\n\n    var _mergedRowSelection$v3 = mergedRowSelection.value,\n        onSelectAll = _mergedRowSelection$v3.onSelectAll,\n        onSelectMultiple = _mergedRowSelection$v3.onSelectMultiple,\n        selectionColWidth = _mergedRowSelection$v3.columnWidth,\n        selectionType = _mergedRowSelection$v3.type,\n        fixed = _mergedRowSelection$v3.fixed,\n        customizeRenderCell = _mergedRowSelection$v3.renderCell,\n        hideSelectAll = _mergedRowSelection$v3.hideSelectAll,\n        checkStrictly = _mergedRowSelection$v3.checkStrictly;\n    var prefixCls = configRef.prefixCls,\n        getRecordByKey = configRef.getRecordByKey,\n        getRowKey = configRef.getRowKey,\n        expandType = configRef.expandType,\n        getPopupContainer = configRef.getPopupContainer;\n\n    if (!rowSelectionRef.value) {\n      if (process.env.NODE_ENV !== 'production') {\n        devWarning(!columns.includes(SELECTION_COLUMN), 'Table', '`rowSelection` is not config but `SELECTION_COLUMN` exists in the `columns`.');\n      }\n\n      return columns.filter(function (col) {\n        return col !== SELECTION_COLUMN;\n      });\n    } // Support selection\n\n\n    var cloneColumns = columns.slice();\n    var keySet = new Set(derivedSelectedKeySet.value); // Record key only need check with enabled\n\n    var recordKeys = flattedData.value.map(getRowKey.value).filter(function (key) {\n      return !checkboxPropsMap.value.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet.delete(key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys);\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections.value) {\n        var menu = _createVNode(Menu, {\n          \"getPopupContainer\": getPopupContainer.value\n        }, {\n          default: function _default() {\n            return [mergedSelections.value.map(function (selection, index) {\n              var key = selection.key,\n                  text = selection.text,\n                  onSelectionClick = selection.onSelect;\n              return _createVNode(Menu.Item, {\n                \"key\": key || index,\n                \"onClick\": function onClick() {\n                  onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n                }\n              }, {\n                default: function _default() {\n                  return [text];\n                }\n              });\n            })];\n          }\n        });\n\n        customizeSelections = _createVNode(\"div\", {\n          \"class\": \"\".concat(prefixCls.value, \"-selection-extra\")\n        }, [_createVNode(Dropdown, {\n          \"overlay\": menu,\n          \"getPopupContainer\": getPopupContainer.value\n        }, {\n          default: function _default() {\n            return [_createVNode(\"span\", null, [_createVNode(DownOutlined, null, null)])];\n          }\n        })]);\n      }\n\n      var allDisabledData = flattedData.value.map(function (record, index) {\n        var key = getRowKey.value(record, index);\n        var checkboxProps = checkboxPropsMap.value.get(key) || {};\n        return _extends({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedDataLength.value;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && _createVNode(\"div\", {\n        \"class\": \"\".concat(prefixCls.value, \"-selection\")\n      }, [_createVNode(Checkbox, {\n        \"checked\": !allDisabled ? !!flattedDataLength.value && checkedCurrentAll : allDisabledAndChecked,\n        \"indeterminate\": !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        \"onChange\": onSelectAllChange,\n        \"disabled\": flattedDataLength.value === 0 || allDisabled,\n        \"skipGroup\": true\n      }, null), customizeSelections]);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_ref5) {\n        var record = _ref5.record,\n            index = _ref5.index;\n        var key = getRowKey.value(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: _createVNode(Radio, _objectSpread(_objectSpread({}, checkboxPropsMap.value.get(key)), {}, {\n            \"checked\": checked,\n            \"onClick\": function onClick(e) {\n              return e.stopPropagation();\n            },\n            \"onChange\": function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          }), null),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_ref6) {\n        var record = _ref6.record,\n            index = _ref6.index;\n\n        var _a;\n\n        var key = getRowKey.value(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.value.has(key);\n        var checkboxProps = checkboxPropsMap.value.get(key);\n        var mergedIndeterminate;\n\n        if (expandType.value === 'nest') {\n          mergedIndeterminate = indeterminate;\n          devWarning(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.');\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        } // Record checked\n\n\n        return {\n          node: _createVNode(Checkbox, _objectSpread(_objectSpread({}, checkboxProps), {}, {\n            \"indeterminate\": mergedIndeterminate,\n            \"checked\": checked,\n            \"skipGroup\": true,\n            \"onClick\": function onClick(e) {\n              return e.stopPropagation();\n            },\n            \"onChange\": function onChange(_ref7) {\n              var nativeEvent = _ref7.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey.value, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.delete(recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys);\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys.value;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? arrDel(originCheckedKeys, key) : arrAdd(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = conductCheck([].concat(_toConsumableArray(originCheckedKeys), [key]), true, keyEntities.value, maxLevel.value, levelEntities.value, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet.delete(key);\n                    nextCheckedKeys = conductCheck(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities.value, maxLevel.value, levelEntities.value, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              setLastSelectedKey(key);\n            }\n          }), null),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_ref8) {\n      var record = _ref8.record,\n          index = _ref8.index;\n\n      var _renderCell = renderCell({\n        record: record,\n        index: index\n      }),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Insert selection column if not exist\n\n\n    if (!cloneColumns.includes(SELECTION_COLUMN)) {\n      // Always after expand icon\n      if (cloneColumns.findIndex(function (col) {\n        var _a;\n\n        return ((_a = col[INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN';\n      }) === 0) {\n        var _cloneColumns = cloneColumns,\n            _cloneColumns2 = _toArray(_cloneColumns),\n            expandColumn = _cloneColumns2[0],\n            restColumns = _cloneColumns2.slice(1);\n\n        cloneColumns = [expandColumn, SELECTION_COLUMN].concat(_toConsumableArray(restColumns));\n      } else {\n        // Normal insert at first column\n        cloneColumns = [SELECTION_COLUMN].concat(_toConsumableArray(cloneColumns));\n      }\n    } // Deduplicate selection column\n\n\n    var selectionColumnIndex = cloneColumns.indexOf(SELECTION_COLUMN);\n\n    if (process.env.NODE_ENV !== 'production' && cloneColumns.filter(function (col) {\n      return col === SELECTION_COLUMN;\n    }).length > 1) {\n      devWarning(false, 'Table', 'Multiple `SELECTION_COLUMN` exist in `columns`.');\n    }\n\n    cloneColumns = cloneColumns.filter(function (column, index) {\n      return column !== SELECTION_COLUMN || index === selectionColumnIndex;\n    }); // Fixed column logic\n\n    var prevCol = cloneColumns[selectionColumnIndex - 1];\n    var nextCol = cloneColumns[selectionColumnIndex + 1];\n    var mergedFixed = fixed;\n\n    if (mergedFixed === undefined) {\n      if ((nextCol === null || nextCol === void 0 ? void 0 : nextCol.fixed) !== undefined) {\n        mergedFixed = nextCol.fixed;\n      } else if ((prevCol === null || prevCol === void 0 ? void 0 : prevCol.fixed) !== undefined) {\n        mergedFixed = prevCol.fixed;\n      }\n    }\n\n    if (mergedFixed && prevCol && ((_a = prevCol[INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN' && prevCol.fixed === undefined) {\n      prevCol.fixed = mergedFixed;\n    } // Replace with real selection column\n\n\n    var selectionColumn = _defineProperty({\n      fixed: mergedFixed,\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls.value, \"-selection-column\"),\n      title: mergedRowSelection.value.columnTitle || title,\n      customRender: renderSelectionCell\n    }, INTERNAL_COL_DEFINE, {\n      class: \"\".concat(prefixCls.value, \"-selection-col\")\n    });\n\n    return cloneColumns.map(function (col) {\n      return col === SELECTION_COLUMN ? selectionColumn : col;\n    });\n  };\n\n  return [transformColumns, derivedSelectedKeySet];\n}","map":{"version":3,"names":["_defineProperty","_toArray","_objectSpread","_slicedToArray","_extends","_toConsumableArray","_typeof","createVNode","_createVNode","DownOutlined","INTERNAL_COL_DEFINE","arrAdd","arrDel","conductCheck","convertDataToEntities","devWarning","useMergedState","useState","watchEffect","computed","shallowRef","Checkbox","Dropdown","Menu","Radio","useMaxLevel","SELECTION_COLUMN","SELECTION_ALL","SELECTION_INVERT","SELECTION_NONE","EMPTY_LIST","flattenData","data","childrenColumnName","list","forEach","record","push","concat","useSelection","rowSelectionRef","configRef","mergedRowSelection","temp","value","_temp$checkStrictly","checkStrictly","_useMergedState","selectedRowKeys","defaultSelectedRowKeys","_useMergedState2","mergedSelectedKeys","setMergedSelectedKeys","preserveRecordsRef","Map","updatePreserveRecordsCache","keys","preserveSelectedRowKeys","newCache","key","getRecordByKey","has","get","set","keyEntities","externalGetKey","getRowKey","childrenPropName","flattedData","pageData","checkboxPropsMap","map","getCheckboxProps","index","checkboxProps","process","env","NODE_ENV","_useMaxLevel","maxLevel","levelEntities","isCheckboxDisabled","r","_a","disabled","selectKeysState","_conductCheck","checkedKeys","halfCheckedKeys","derivedSelectedKeys","derivedHalfSelectedKeys","derivedSelectedKeySet","type","slice","Set","derivedHalfSelectedKeySet","_useState","_useState2","lastSelectedKey","setLastSelectedKey","setSelectedKeys","availableKeys","records","_mergedRowSelection$v","onSelectionChange","onChange","undefined","triggerSingleSelection","selected","event","onSelect","_ref","rows","k","mergedSelections","_mergedRowSelection$v2","onSelectInvert","onSelectNone","selections","hideSelectAll","tableLocale","locale","selectionList","selection","text","selectionAll","filter","checkProps","selectInvert","keySet","delete","add","Array","from","selectNone","flattedDataLength","length","transformColumns","columns","_mergedRowSelection$v3","onSelectAll","onSelectMultiple","selectionColWidth","columnWidth","selectionType","fixed","customizeRenderCell","renderCell","prefixCls","expandType","getPopupContainer","includes","col","cloneColumns","recordKeys","checkedCurrentAll","every","checkedCurrentSome","some","onSelectAllChange","changeKeys","title","customizeSelections","menu","default","_default","onSelectionClick","Item","onClick","allDisabledData","checked","_ref2","allDisabled","allDisabledAndChecked","_ref3","allDisabledSomeChecked","_ref4","_ref5","node","e","stopPropagation","nativeEvent","_ref6","indeterminate","mergedIndeterminate","_ref7","shiftKey","startIndex","endIndex","pointKeys","recordKey","recordIndex","rangeKeys","changedKeys","originCheckedKeys","result","_checkedKeys","nextCheckedKeys","tempKeySet","renderSelectionCell","_ref8","_renderCell","findIndex","columnType","_cloneColumns","_cloneColumns2","expandColumn","restColumns","selectionColumnIndex","indexOf","column","prevCol","nextCol","mergedFixed","selectionColumn","width","className","columnTitle","customRender","class"],"sources":["/Users/cinder/Desktop/psyplusweb/node_modules/ant-design-vue/es/table/hooks/useSelection.js"],"sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport { createVNode as _createVNode } from \"vue\";\nimport DownOutlined from \"@ant-design/icons-vue/es/icons/DownOutlined\";\nimport { INTERNAL_COL_DEFINE } from '../../vc-table';\nimport { arrAdd, arrDel } from '../../vc-tree/util';\nimport { conductCheck } from '../../vc-tree/utils/conductUtil';\nimport { convertDataToEntities } from '../../vc-tree/utils/treeUtil';\nimport devWarning from '../../vc-util/devWarning';\nimport useMergedState from '../../_util/hooks/useMergedState';\nimport useState from '../../_util/hooks/useState';\nimport { watchEffect, computed, shallowRef } from 'vue';\nimport Checkbox from '../../checkbox';\nimport Dropdown from '../../dropdown';\nimport Menu from '../../menu';\nimport Radio from '../../radio';\nimport useMaxLevel from '../../vc-tree/useMaxLevel'; // TODO: warning if use ajax!!!\n\nexport var SELECTION_COLUMN = {};\nexport var SELECTION_ALL = 'SELECT_ALL';\nexport var SELECTION_INVERT = 'SELECT_INVERT';\nexport var SELECTION_NONE = 'SELECT_NONE';\nvar EMPTY_LIST = [];\n\nfunction flattenData(data, childrenColumnName) {\n  var list = [];\n  (data || []).forEach(function (record) {\n    list.push(record);\n\n    if (record && _typeof(record) === 'object' && childrenColumnName in record) {\n      list = [].concat(_toConsumableArray(list), _toConsumableArray(flattenData(record[childrenColumnName], childrenColumnName)));\n    }\n  });\n  return list;\n}\n\nexport default function useSelection(rowSelectionRef, configRef) {\n  var mergedRowSelection = computed(function () {\n    var temp = rowSelectionRef.value || {};\n    var _temp$checkStrictly = temp.checkStrictly,\n        checkStrictly = _temp$checkStrictly === void 0 ? true : _temp$checkStrictly;\n    return _extends(_extends({}, temp), {\n      checkStrictly: checkStrictly\n    });\n  }); // ========================= Keys =========================\n\n  var _useMergedState = useMergedState(mergedRowSelection.value.selectedRowKeys || mergedRowSelection.value.defaultSelectedRowKeys || EMPTY_LIST, {\n    value: computed(function () {\n      return mergedRowSelection.value.selectedRowKeys;\n    })\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedSelectedKeys = _useMergedState2[0],\n      setMergedSelectedKeys = _useMergedState2[1]; // ======================== Caches ========================\n\n\n  var preserveRecordsRef = shallowRef(new Map());\n\n  var updatePreserveRecordsCache = function updatePreserveRecordsCache(keys) {\n    if (mergedRowSelection.value.preserveSelectedRowKeys) {\n      var newCache = new Map(); // Keep key if mark as preserveSelectedRowKeys\n\n      keys.forEach(function (key) {\n        var record = configRef.getRecordByKey(key);\n\n        if (!record && preserveRecordsRef.value.has(key)) {\n          record = preserveRecordsRef.value.get(key);\n        }\n\n        newCache.set(key, record);\n      }); // Refresh to new cache\n\n      preserveRecordsRef.value = newCache;\n    }\n  };\n\n  watchEffect(function () {\n    updatePreserveRecordsCache(mergedSelectedKeys.value);\n  });\n  var keyEntities = computed(function () {\n    return mergedRowSelection.value.checkStrictly ? null : convertDataToEntities(configRef.data.value, {\n      externalGetKey: configRef.getRowKey.value,\n      childrenPropName: configRef.childrenColumnName.value\n    }).keyEntities;\n  }); // Get flatten data\n\n  var flattedData = computed(function () {\n    return flattenData(configRef.pageData.value, configRef.childrenColumnName.value);\n  }); // Get all checkbox props\n\n  var checkboxPropsMap = computed(function () {\n    var map = new Map();\n    var getRowKey = configRef.getRowKey.value;\n    var getCheckboxProps = mergedRowSelection.value.getCheckboxProps;\n    flattedData.value.forEach(function (record, index) {\n      var key = getRowKey(record, index);\n      var checkboxProps = (getCheckboxProps ? getCheckboxProps(record) : null) || {};\n      map.set(key, checkboxProps);\n\n      if (process.env.NODE_ENV !== 'production' && ('checked' in checkboxProps || 'defaultChecked' in checkboxProps)) {\n        devWarning(false, 'Table', 'Do not set `checked` or `defaultChecked` in `getCheckboxProps`. Please use `selectedRowKeys` instead.');\n      }\n    });\n    return map;\n  });\n\n  var _useMaxLevel = useMaxLevel(keyEntities),\n      maxLevel = _useMaxLevel.maxLevel,\n      levelEntities = _useMaxLevel.levelEntities;\n\n  var isCheckboxDisabled = function isCheckboxDisabled(r) {\n    var _a;\n\n    return !!((_a = checkboxPropsMap.value.get(configRef.getRowKey.value(r))) === null || _a === void 0 ? void 0 : _a.disabled);\n  };\n\n  var selectKeysState = computed(function () {\n    if (mergedRowSelection.value.checkStrictly) {\n      return [mergedSelectedKeys.value || [], []];\n    }\n\n    var _conductCheck = conductCheck(mergedSelectedKeys.value, true, keyEntities.value, maxLevel.value, levelEntities.value, isCheckboxDisabled),\n        checkedKeys = _conductCheck.checkedKeys,\n        halfCheckedKeys = _conductCheck.halfCheckedKeys;\n\n    return [checkedKeys || [], halfCheckedKeys];\n  });\n  var derivedSelectedKeys = computed(function () {\n    return selectKeysState.value[0];\n  });\n  var derivedHalfSelectedKeys = computed(function () {\n    return selectKeysState.value[1];\n  });\n  var derivedSelectedKeySet = computed(function () {\n    var keys = mergedRowSelection.value.type === 'radio' ? derivedSelectedKeys.value.slice(0, 1) : derivedSelectedKeys.value;\n    return new Set(keys);\n  });\n  var derivedHalfSelectedKeySet = computed(function () {\n    return mergedRowSelection.value.type === 'radio' ? new Set() : new Set(derivedHalfSelectedKeys.value);\n  }); // Save last selected key to enable range selection\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      lastSelectedKey = _useState2[0],\n      setLastSelectedKey = _useState2[1]; // // Reset if rowSelection reset\n  // we use computed to reset, donot need setMergedSelectedKeys again like react\n  // https://github.com/vueComponent/ant-design-vue/issues/4885\n  // watchEffect(() => {\n  //   if (!rowSelectionRef.value) {\n  //     setMergedSelectedKeys([]);\n  //   }\n  // });\n\n\n  var setSelectedKeys = function setSelectedKeys(keys) {\n    var availableKeys;\n    var records;\n    updatePreserveRecordsCache(keys);\n    var _mergedRowSelection$v = mergedRowSelection.value,\n        preserveSelectedRowKeys = _mergedRowSelection$v.preserveSelectedRowKeys,\n        onSelectionChange = _mergedRowSelection$v.onChange;\n    var getRecordByKey = configRef.getRecordByKey;\n\n    if (preserveSelectedRowKeys) {\n      availableKeys = keys;\n      records = keys.map(function (key) {\n        return preserveRecordsRef.value.get(key);\n      });\n    } else {\n      // Filter key which not exist in the `dataSource`\n      availableKeys = [];\n      records = [];\n      keys.forEach(function (key) {\n        var record = getRecordByKey(key);\n\n        if (record !== undefined) {\n          availableKeys.push(key);\n          records.push(record);\n        }\n      });\n    }\n\n    setMergedSelectedKeys(availableKeys);\n    onSelectionChange === null || onSelectionChange === void 0 ? void 0 : onSelectionChange(availableKeys, records);\n  }; // ====================== Selections ======================\n  // Trigger single `onSelect` event\n\n\n  var triggerSingleSelection = function triggerSingleSelection(key, selected, keys, event) {\n    var onSelect = mergedRowSelection.value.onSelect;\n\n    var _ref = configRef || {},\n        getRecordByKey = _ref.getRecordByKey;\n\n    if (onSelect) {\n      var rows = keys.map(function (k) {\n        return getRecordByKey(k);\n      });\n      onSelect(getRecordByKey(key), selected, rows, event);\n    }\n\n    setSelectedKeys(keys);\n  };\n\n  var mergedSelections = computed(function () {\n    var _mergedRowSelection$v2 = mergedRowSelection.value,\n        onSelectInvert = _mergedRowSelection$v2.onSelectInvert,\n        onSelectNone = _mergedRowSelection$v2.onSelectNone,\n        selections = _mergedRowSelection$v2.selections,\n        hideSelectAll = _mergedRowSelection$v2.hideSelectAll;\n    var data = configRef.data,\n        pageData = configRef.pageData,\n        getRowKey = configRef.getRowKey,\n        tableLocale = configRef.locale;\n\n    if (!selections || hideSelectAll) {\n      return null;\n    }\n\n    var selectionList = selections === true ? [SELECTION_ALL, SELECTION_INVERT, SELECTION_NONE] : selections;\n    return selectionList.map(function (selection) {\n      if (selection === SELECTION_ALL) {\n        return {\n          key: 'all',\n          text: tableLocale.value.selectionAll,\n          onSelect: function onSelect() {\n            setSelectedKeys(data.value.map(function (record, index) {\n              return getRowKey.value(record, index);\n            }).filter(function (key) {\n              var checkProps = checkboxPropsMap.value.get(key);\n              return !(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled) || derivedSelectedKeySet.value.has(key);\n            }));\n          }\n        };\n      }\n\n      if (selection === SELECTION_INVERT) {\n        return {\n          key: 'invert',\n          text: tableLocale.value.selectInvert,\n          onSelect: function onSelect() {\n            var keySet = new Set(derivedSelectedKeySet.value);\n            pageData.value.forEach(function (record, index) {\n              var key = getRowKey.value(record, index);\n              var checkProps = checkboxPropsMap.value.get(key);\n\n              if (!(checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled)) {\n                if (keySet.has(key)) {\n                  keySet.delete(key);\n                } else {\n                  keySet.add(key);\n                }\n              }\n            });\n            var keys = Array.from(keySet);\n\n            if (onSelectInvert) {\n              devWarning(false, 'Table', '`onSelectInvert` will be removed in future. Please use `onChange` instead.');\n              onSelectInvert(keys);\n            }\n\n            setSelectedKeys(keys);\n          }\n        };\n      }\n\n      if (selection === SELECTION_NONE) {\n        return {\n          key: 'none',\n          text: tableLocale.value.selectNone,\n          onSelect: function onSelect() {\n            onSelectNone === null || onSelectNone === void 0 ? void 0 : onSelectNone();\n            setSelectedKeys(Array.from(derivedSelectedKeySet.value).filter(function (key) {\n              var checkProps = checkboxPropsMap.value.get(key);\n              return checkProps === null || checkProps === void 0 ? void 0 : checkProps.disabled;\n            }));\n          }\n        };\n      }\n\n      return selection;\n    });\n  });\n  var flattedDataLength = computed(function () {\n    return flattedData.value.length;\n  }); // ======================= Columns ========================\n\n  var transformColumns = function transformColumns(columns) {\n    var _a;\n\n    var _mergedRowSelection$v3 = mergedRowSelection.value,\n        onSelectAll = _mergedRowSelection$v3.onSelectAll,\n        onSelectMultiple = _mergedRowSelection$v3.onSelectMultiple,\n        selectionColWidth = _mergedRowSelection$v3.columnWidth,\n        selectionType = _mergedRowSelection$v3.type,\n        fixed = _mergedRowSelection$v3.fixed,\n        customizeRenderCell = _mergedRowSelection$v3.renderCell,\n        hideSelectAll = _mergedRowSelection$v3.hideSelectAll,\n        checkStrictly = _mergedRowSelection$v3.checkStrictly;\n    var prefixCls = configRef.prefixCls,\n        getRecordByKey = configRef.getRecordByKey,\n        getRowKey = configRef.getRowKey,\n        expandType = configRef.expandType,\n        getPopupContainer = configRef.getPopupContainer;\n\n    if (!rowSelectionRef.value) {\n      if (process.env.NODE_ENV !== 'production') {\n        devWarning(!columns.includes(SELECTION_COLUMN), 'Table', '`rowSelection` is not config but `SELECTION_COLUMN` exists in the `columns`.');\n      }\n\n      return columns.filter(function (col) {\n        return col !== SELECTION_COLUMN;\n      });\n    } // Support selection\n\n\n    var cloneColumns = columns.slice();\n    var keySet = new Set(derivedSelectedKeySet.value); // Record key only need check with enabled\n\n    var recordKeys = flattedData.value.map(getRowKey.value).filter(function (key) {\n      return !checkboxPropsMap.value.get(key).disabled;\n    });\n    var checkedCurrentAll = recordKeys.every(function (key) {\n      return keySet.has(key);\n    });\n    var checkedCurrentSome = recordKeys.some(function (key) {\n      return keySet.has(key);\n    });\n\n    var onSelectAllChange = function onSelectAllChange() {\n      var changeKeys = [];\n\n      if (checkedCurrentAll) {\n        recordKeys.forEach(function (key) {\n          keySet.delete(key);\n          changeKeys.push(key);\n        });\n      } else {\n        recordKeys.forEach(function (key) {\n          if (!keySet.has(key)) {\n            keySet.add(key);\n            changeKeys.push(key);\n          }\n        });\n      }\n\n      var keys = Array.from(keySet);\n      onSelectAll === null || onSelectAll === void 0 ? void 0 : onSelectAll(!checkedCurrentAll, keys.map(function (k) {\n        return getRecordByKey(k);\n      }), changeKeys.map(function (k) {\n        return getRecordByKey(k);\n      }));\n      setSelectedKeys(keys);\n    }; // ===================== Render =====================\n    // Title Cell\n\n\n    var title;\n\n    if (selectionType !== 'radio') {\n      var customizeSelections;\n\n      if (mergedSelections.value) {\n        var menu = _createVNode(Menu, {\n          \"getPopupContainer\": getPopupContainer.value\n        }, {\n          default: function _default() {\n            return [mergedSelections.value.map(function (selection, index) {\n              var key = selection.key,\n                  text = selection.text,\n                  onSelectionClick = selection.onSelect;\n              return _createVNode(Menu.Item, {\n                \"key\": key || index,\n                \"onClick\": function onClick() {\n                  onSelectionClick === null || onSelectionClick === void 0 ? void 0 : onSelectionClick(recordKeys);\n                }\n              }, {\n                default: function _default() {\n                  return [text];\n                }\n              });\n            })];\n          }\n        });\n\n        customizeSelections = _createVNode(\"div\", {\n          \"class\": \"\".concat(prefixCls.value, \"-selection-extra\")\n        }, [_createVNode(Dropdown, {\n          \"overlay\": menu,\n          \"getPopupContainer\": getPopupContainer.value\n        }, {\n          default: function _default() {\n            return [_createVNode(\"span\", null, [_createVNode(DownOutlined, null, null)])];\n          }\n        })]);\n      }\n\n      var allDisabledData = flattedData.value.map(function (record, index) {\n        var key = getRowKey.value(record, index);\n        var checkboxProps = checkboxPropsMap.value.get(key) || {};\n        return _extends({\n          checked: keySet.has(key)\n        }, checkboxProps);\n      }).filter(function (_ref2) {\n        var disabled = _ref2.disabled;\n        return disabled;\n      });\n      var allDisabled = !!allDisabledData.length && allDisabledData.length === flattedDataLength.value;\n      var allDisabledAndChecked = allDisabled && allDisabledData.every(function (_ref3) {\n        var checked = _ref3.checked;\n        return checked;\n      });\n      var allDisabledSomeChecked = allDisabled && allDisabledData.some(function (_ref4) {\n        var checked = _ref4.checked;\n        return checked;\n      });\n      title = !hideSelectAll && _createVNode(\"div\", {\n        \"class\": \"\".concat(prefixCls.value, \"-selection\")\n      }, [_createVNode(Checkbox, {\n        \"checked\": !allDisabled ? !!flattedDataLength.value && checkedCurrentAll : allDisabledAndChecked,\n        \"indeterminate\": !allDisabled ? !checkedCurrentAll && checkedCurrentSome : !allDisabledAndChecked && allDisabledSomeChecked,\n        \"onChange\": onSelectAllChange,\n        \"disabled\": flattedDataLength.value === 0 || allDisabled,\n        \"skipGroup\": true\n      }, null), customizeSelections]);\n    } // Body Cell\n\n\n    var renderCell;\n\n    if (selectionType === 'radio') {\n      renderCell = function renderCell(_ref5) {\n        var record = _ref5.record,\n            index = _ref5.index;\n        var key = getRowKey.value(record, index);\n        var checked = keySet.has(key);\n        return {\n          node: _createVNode(Radio, _objectSpread(_objectSpread({}, checkboxPropsMap.value.get(key)), {}, {\n            \"checked\": checked,\n            \"onClick\": function onClick(e) {\n              return e.stopPropagation();\n            },\n            \"onChange\": function onChange(event) {\n              if (!keySet.has(key)) {\n                triggerSingleSelection(key, true, [key], event.nativeEvent);\n              }\n            }\n          }), null),\n          checked: checked\n        };\n      };\n    } else {\n      renderCell = function renderCell(_ref6) {\n        var record = _ref6.record,\n            index = _ref6.index;\n\n        var _a;\n\n        var key = getRowKey.value(record, index);\n        var checked = keySet.has(key);\n        var indeterminate = derivedHalfSelectedKeySet.value.has(key);\n        var checkboxProps = checkboxPropsMap.value.get(key);\n        var mergedIndeterminate;\n\n        if (expandType.value === 'nest') {\n          mergedIndeterminate = indeterminate;\n          devWarning(typeof (checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== 'boolean', 'Table', 'set `indeterminate` using `rowSelection.getCheckboxProps` is not allowed with tree structured dataSource.');\n        } else {\n          mergedIndeterminate = (_a = checkboxProps === null || checkboxProps === void 0 ? void 0 : checkboxProps.indeterminate) !== null && _a !== void 0 ? _a : indeterminate;\n        } // Record checked\n\n\n        return {\n          node: _createVNode(Checkbox, _objectSpread(_objectSpread({}, checkboxProps), {}, {\n            \"indeterminate\": mergedIndeterminate,\n            \"checked\": checked,\n            \"skipGroup\": true,\n            \"onClick\": function onClick(e) {\n              return e.stopPropagation();\n            },\n            \"onChange\": function onChange(_ref7) {\n              var nativeEvent = _ref7.nativeEvent;\n              var shiftKey = nativeEvent.shiftKey;\n              var startIndex = -1;\n              var endIndex = -1; // Get range of this\n\n              if (shiftKey && checkStrictly) {\n                var pointKeys = new Set([lastSelectedKey.value, key]);\n                recordKeys.some(function (recordKey, recordIndex) {\n                  if (pointKeys.has(recordKey)) {\n                    if (startIndex === -1) {\n                      startIndex = recordIndex;\n                    } else {\n                      endIndex = recordIndex;\n                      return true;\n                    }\n                  }\n\n                  return false;\n                });\n              }\n\n              if (endIndex !== -1 && startIndex !== endIndex && checkStrictly) {\n                // Batch update selections\n                var rangeKeys = recordKeys.slice(startIndex, endIndex + 1);\n                var changedKeys = [];\n\n                if (checked) {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.delete(recordKey);\n                    }\n                  });\n                } else {\n                  rangeKeys.forEach(function (recordKey) {\n                    if (!keySet.has(recordKey)) {\n                      changedKeys.push(recordKey);\n                      keySet.add(recordKey);\n                    }\n                  });\n                }\n\n                var keys = Array.from(keySet);\n                onSelectMultiple === null || onSelectMultiple === void 0 ? void 0 : onSelectMultiple(!checked, keys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }), changedKeys.map(function (recordKey) {\n                  return getRecordByKey(recordKey);\n                }));\n                setSelectedKeys(keys);\n              } else {\n                // Single record selected\n                var originCheckedKeys = derivedSelectedKeys.value;\n\n                if (checkStrictly) {\n                  var checkedKeys = checked ? arrDel(originCheckedKeys, key) : arrAdd(originCheckedKeys, key);\n                  triggerSingleSelection(key, !checked, checkedKeys, nativeEvent);\n                } else {\n                  // Always fill first\n                  var result = conductCheck([].concat(_toConsumableArray(originCheckedKeys), [key]), true, keyEntities.value, maxLevel.value, levelEntities.value, isCheckboxDisabled);\n                  var _checkedKeys = result.checkedKeys,\n                      halfCheckedKeys = result.halfCheckedKeys;\n                  var nextCheckedKeys = _checkedKeys; // If remove, we do it again to correction\n\n                  if (checked) {\n                    var tempKeySet = new Set(_checkedKeys);\n                    tempKeySet.delete(key);\n                    nextCheckedKeys = conductCheck(Array.from(tempKeySet), {\n                      checked: false,\n                      halfCheckedKeys: halfCheckedKeys\n                    }, keyEntities.value, maxLevel.value, levelEntities.value, isCheckboxDisabled).checkedKeys;\n                  }\n\n                  triggerSingleSelection(key, !checked, nextCheckedKeys, nativeEvent);\n                }\n              }\n\n              setLastSelectedKey(key);\n            }\n          }), null),\n          checked: checked\n        };\n      };\n    }\n\n    var renderSelectionCell = function renderSelectionCell(_ref8) {\n      var record = _ref8.record,\n          index = _ref8.index;\n\n      var _renderCell = renderCell({\n        record: record,\n        index: index\n      }),\n          node = _renderCell.node,\n          checked = _renderCell.checked;\n\n      if (customizeRenderCell) {\n        return customizeRenderCell(checked, record, index, node);\n      }\n\n      return node;\n    }; // Insert selection column if not exist\n\n\n    if (!cloneColumns.includes(SELECTION_COLUMN)) {\n      // Always after expand icon\n      if (cloneColumns.findIndex(function (col) {\n        var _a;\n\n        return ((_a = col[INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN';\n      }) === 0) {\n        var _cloneColumns = cloneColumns,\n            _cloneColumns2 = _toArray(_cloneColumns),\n            expandColumn = _cloneColumns2[0],\n            restColumns = _cloneColumns2.slice(1);\n\n        cloneColumns = [expandColumn, SELECTION_COLUMN].concat(_toConsumableArray(restColumns));\n      } else {\n        // Normal insert at first column\n        cloneColumns = [SELECTION_COLUMN].concat(_toConsumableArray(cloneColumns));\n      }\n    } // Deduplicate selection column\n\n\n    var selectionColumnIndex = cloneColumns.indexOf(SELECTION_COLUMN);\n\n    if (process.env.NODE_ENV !== 'production' && cloneColumns.filter(function (col) {\n      return col === SELECTION_COLUMN;\n    }).length > 1) {\n      devWarning(false, 'Table', 'Multiple `SELECTION_COLUMN` exist in `columns`.');\n    }\n\n    cloneColumns = cloneColumns.filter(function (column, index) {\n      return column !== SELECTION_COLUMN || index === selectionColumnIndex;\n    }); // Fixed column logic\n\n    var prevCol = cloneColumns[selectionColumnIndex - 1];\n    var nextCol = cloneColumns[selectionColumnIndex + 1];\n    var mergedFixed = fixed;\n\n    if (mergedFixed === undefined) {\n      if ((nextCol === null || nextCol === void 0 ? void 0 : nextCol.fixed) !== undefined) {\n        mergedFixed = nextCol.fixed;\n      } else if ((prevCol === null || prevCol === void 0 ? void 0 : prevCol.fixed) !== undefined) {\n        mergedFixed = prevCol.fixed;\n      }\n    }\n\n    if (mergedFixed && prevCol && ((_a = prevCol[INTERNAL_COL_DEFINE]) === null || _a === void 0 ? void 0 : _a.columnType) === 'EXPAND_COLUMN' && prevCol.fixed === undefined) {\n      prevCol.fixed = mergedFixed;\n    } // Replace with real selection column\n\n\n    var selectionColumn = _defineProperty({\n      fixed: mergedFixed,\n      width: selectionColWidth,\n      className: \"\".concat(prefixCls.value, \"-selection-column\"),\n      title: mergedRowSelection.value.columnTitle || title,\n      customRender: renderSelectionCell\n    }, INTERNAL_COL_DEFINE, {\n      class: \"\".concat(prefixCls.value, \"-selection-col\")\n    });\n\n    return cloneColumns.map(function (col) {\n      return col === SELECTION_COLUMN ? selectionColumn : col;\n    });\n  };\n\n  return [transformColumns, derivedSelectedKeySet];\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}