{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useInjectCascader } from '../context';\nimport { watch } from 'vue';\nimport { useBaseProps } from '../../vc-select';\nimport useState from '../../_util/hooks/useState';\n/**\n * Control the active open options path.\n */\n\nexport default (function () {\n  var baseProps = useBaseProps();\n\n  var _useInjectCascader = useInjectCascader(),\n      values = _useInjectCascader.values; // Record current dropdown active options\n  // This also control the open status\n\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeValueCells = _useState2[0],\n      setActiveValueCells = _useState2[1];\n\n  watch(function () {\n    return baseProps.open;\n  }, function () {\n    if (baseProps.open && !baseProps.multiple) {\n      var firstValueCells = values.value[0];\n      setActiveValueCells(firstValueCells || []);\n    }\n  }, {\n    immediate: true\n  });\n  return [activeValueCells, setActiveValueCells];\n});","map":{"version":3,"names":["_slicedToArray","useInjectCascader","watch","useBaseProps","useState","baseProps","_useInjectCascader","values","_useState","_useState2","activeValueCells","setActiveValueCells","open","multiple","firstValueCells","value","immediate"],"sources":["/Users/cinder/Desktop/Psy+/psyplusweb/node_modules/ant-design-vue/es/vc-cascader/OptionList/useActive.js"],"sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useInjectCascader } from '../context';\nimport { watch } from 'vue';\nimport { useBaseProps } from '../../vc-select';\nimport useState from '../../_util/hooks/useState';\n/**\n * Control the active open options path.\n */\n\nexport default (function () {\n  var baseProps = useBaseProps();\n\n  var _useInjectCascader = useInjectCascader(),\n      values = _useInjectCascader.values; // Record current dropdown active options\n  // This also control the open status\n\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeValueCells = _useState2[0],\n      setActiveValueCells = _useState2[1];\n\n  watch(function () {\n    return baseProps.open;\n  }, function () {\n    if (baseProps.open && !baseProps.multiple) {\n      var firstValueCells = values.value[0];\n      setActiveValueCells(firstValueCells || []);\n    }\n  }, {\n    immediate: true\n  });\n  return [activeValueCells, setActiveValueCells];\n});"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,SAASC,iBAAT,QAAkC,YAAlC;AACA,SAASC,KAAT,QAAsB,KAAtB;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA;AACA;AACA;;AAEA,gBAAgB,YAAY;EAC1B,IAAIC,SAAS,GAAGF,YAAY,EAA5B;;EAEA,IAAIG,kBAAkB,GAAGL,iBAAiB,EAA1C;EAAA,IACIM,MAAM,GAAGD,kBAAkB,CAACC,MADhC,CAH0B,CAIc;EACxC;;;EAGA,IAAIC,SAAS,GAAGJ,QAAQ,CAAC,EAAD,CAAxB;EAAA,IACIK,UAAU,GAAGT,cAAc,CAACQ,SAAD,EAAY,CAAZ,CAD/B;EAAA,IAEIE,gBAAgB,GAAGD,UAAU,CAAC,CAAD,CAFjC;EAAA,IAGIE,mBAAmB,GAAGF,UAAU,CAAC,CAAD,CAHpC;;EAKAP,KAAK,CAAC,YAAY;IAChB,OAAOG,SAAS,CAACO,IAAjB;EACD,CAFI,EAEF,YAAY;IACb,IAAIP,SAAS,CAACO,IAAV,IAAkB,CAACP,SAAS,CAACQ,QAAjC,EAA2C;MACzC,IAAIC,eAAe,GAAGP,MAAM,CAACQ,KAAP,CAAa,CAAb,CAAtB;MACAJ,mBAAmB,CAACG,eAAe,IAAI,EAApB,CAAnB;IACD;EACF,CAPI,EAOF;IACDE,SAAS,EAAE;EADV,CAPE,CAAL;EAUA,OAAO,CAACN,gBAAD,EAAmBC,mBAAnB,CAAP;AACD,CAxBD"},"metadata":{},"sourceType":"module"}