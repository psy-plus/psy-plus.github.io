{"ast":null,"code":"import { createVNode as _createVNode } from \"vue\";\nimport ExpandedRow from './ExpandedRow';\nimport { getColumnsKey } from '../utils/valueUtil';\nimport MeasureCell from './MeasureCell';\nimport BodyRow from './BodyRow';\nimport useFlattenRecords from '../hooks/useFlattenRecords';\nimport { defineComponent, ref, toRef } from 'vue';\nimport { useInjectResize } from '../context/ResizeContext';\nimport { useInjectTable } from '../context/TableContext';\nimport { useInjectBody } from '../context/BodyContext';\nimport { useProvideHover } from '../context/HoverContext';\nexport default defineComponent({\n  name: 'Body',\n  props: ['data', 'getRowKey', 'measureColumnWidth', 'expandedKeys', 'customRow', 'rowExpandable', 'childrenColumnName'],\n  slots: ['emptyNode'],\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var resizeContext = useInjectResize();\n    var tableContext = useInjectTable();\n    var bodyContext = useInjectBody();\n    var flattenData = useFlattenRecords(toRef(props, 'data'), toRef(props, 'childrenColumnName'), toRef(props, 'expandedKeys'), toRef(props, 'getRowKey'));\n    var startRow = ref(-1);\n    var endRow = ref(-1);\n    var timeoutId;\n    useProvideHover({\n      startRow: startRow,\n      endRow: endRow,\n      onHover: function onHover(start, end) {\n        clearTimeout(timeoutId);\n        timeoutId = setTimeout(function () {\n          startRow.value = start;\n          endRow.value = end;\n        }, 100);\n      }\n    });\n    return function () {\n      var _a;\n\n      var data = props.data,\n          getRowKey = props.getRowKey,\n          measureColumnWidth = props.measureColumnWidth,\n          expandedKeys = props.expandedKeys,\n          customRow = props.customRow,\n          rowExpandable = props.rowExpandable,\n          childrenColumnName = props.childrenColumnName;\n      var onColumnResize = resizeContext.onColumnResize;\n      var prefixCls = tableContext.prefixCls,\n          getComponent = tableContext.getComponent;\n      var flattenColumns = bodyContext.flattenColumns;\n      var WrapperComponent = getComponent(['body', 'wrapper'], 'tbody');\n      var trComponent = getComponent(['body', 'row'], 'tr');\n      var tdComponent = getComponent(['body', 'cell'], 'td');\n      var rows;\n\n      if (data.length) {\n        rows = flattenData.value.map(function (item, idx) {\n          var record = item.record,\n              indent = item.indent,\n              renderIndex = item.index;\n          var key = getRowKey(record, idx);\n          return _createVNode(BodyRow, {\n            \"key\": key,\n            \"rowKey\": key,\n            \"record\": record,\n            \"recordKey\": key,\n            \"index\": idx,\n            \"renderIndex\": renderIndex,\n            \"rowComponent\": trComponent,\n            \"cellComponent\": tdComponent,\n            \"expandedKeys\": expandedKeys,\n            \"customRow\": customRow,\n            \"getRowKey\": getRowKey,\n            \"rowExpandable\": rowExpandable,\n            \"childrenColumnName\": childrenColumnName,\n            \"indent\": indent\n          }, null);\n        });\n      } else {\n        rows = _createVNode(ExpandedRow, {\n          \"expanded\": true,\n          \"class\": \"\".concat(prefixCls, \"-placeholder\"),\n          \"prefixCls\": prefixCls,\n          \"component\": trComponent,\n          \"cellComponent\": tdComponent,\n          \"colSpan\": flattenColumns.length,\n          \"isEmpty\": true\n        }, {\n          default: function _default() {\n            return [(_a = slots.emptyNode) === null || _a === void 0 ? void 0 : _a.call(slots)];\n          }\n        });\n      }\n\n      var columnsKey = getColumnsKey(flattenColumns);\n      return _createVNode(WrapperComponent, {\n        \"class\": \"\".concat(prefixCls, \"-tbody\")\n      }, {\n        default: function _default() {\n          return [measureColumnWidth && _createVNode(\"tr\", {\n            \"aria-hidden\": \"true\",\n            \"class\": \"\".concat(prefixCls, \"-measure-row\"),\n            \"style\": {\n              height: 0,\n              fontSize: 0\n            }\n          }, [columnsKey.map(function (columnKey) {\n            return _createVNode(MeasureCell, {\n              \"key\": columnKey,\n              \"columnKey\": columnKey,\n              \"onColumnResize\": onColumnResize\n            }, null);\n          })]), rows];\n        }\n      });\n    };\n  }\n});","map":{"version":3,"names":["createVNode","_createVNode","ExpandedRow","getColumnsKey","MeasureCell","BodyRow","useFlattenRecords","defineComponent","ref","toRef","useInjectResize","useInjectTable","useInjectBody","useProvideHover","name","props","slots","setup","_ref","resizeContext","tableContext","bodyContext","flattenData","startRow","endRow","timeoutId","onHover","start","end","clearTimeout","setTimeout","value","_a","data","getRowKey","measureColumnWidth","expandedKeys","customRow","rowExpandable","childrenColumnName","onColumnResize","prefixCls","getComponent","flattenColumns","WrapperComponent","trComponent","tdComponent","rows","length","map","item","idx","record","indent","renderIndex","index","key","concat","default","_default","emptyNode","call","columnsKey","height","fontSize","columnKey"],"sources":["/Users/cinder/Desktop/psyplusweb/node_modules/ant-design-vue/es/vc-table/Body/index.js"],"sourcesContent":["import { createVNode as _createVNode } from \"vue\";\nimport ExpandedRow from './ExpandedRow';\nimport { getColumnsKey } from '../utils/valueUtil';\nimport MeasureCell from './MeasureCell';\nimport BodyRow from './BodyRow';\nimport useFlattenRecords from '../hooks/useFlattenRecords';\nimport { defineComponent, ref, toRef } from 'vue';\nimport { useInjectResize } from '../context/ResizeContext';\nimport { useInjectTable } from '../context/TableContext';\nimport { useInjectBody } from '../context/BodyContext';\nimport { useProvideHover } from '../context/HoverContext';\nexport default defineComponent({\n  name: 'Body',\n  props: ['data', 'getRowKey', 'measureColumnWidth', 'expandedKeys', 'customRow', 'rowExpandable', 'childrenColumnName'],\n  slots: ['emptyNode'],\n  setup: function setup(props, _ref) {\n    var slots = _ref.slots;\n    var resizeContext = useInjectResize();\n    var tableContext = useInjectTable();\n    var bodyContext = useInjectBody();\n    var flattenData = useFlattenRecords(toRef(props, 'data'), toRef(props, 'childrenColumnName'), toRef(props, 'expandedKeys'), toRef(props, 'getRowKey'));\n    var startRow = ref(-1);\n    var endRow = ref(-1);\n    var timeoutId;\n    useProvideHover({\n      startRow: startRow,\n      endRow: endRow,\n      onHover: function onHover(start, end) {\n        clearTimeout(timeoutId);\n        timeoutId = setTimeout(function () {\n          startRow.value = start;\n          endRow.value = end;\n        }, 100);\n      }\n    });\n    return function () {\n      var _a;\n\n      var data = props.data,\n          getRowKey = props.getRowKey,\n          measureColumnWidth = props.measureColumnWidth,\n          expandedKeys = props.expandedKeys,\n          customRow = props.customRow,\n          rowExpandable = props.rowExpandable,\n          childrenColumnName = props.childrenColumnName;\n      var onColumnResize = resizeContext.onColumnResize;\n      var prefixCls = tableContext.prefixCls,\n          getComponent = tableContext.getComponent;\n      var flattenColumns = bodyContext.flattenColumns;\n      var WrapperComponent = getComponent(['body', 'wrapper'], 'tbody');\n      var trComponent = getComponent(['body', 'row'], 'tr');\n      var tdComponent = getComponent(['body', 'cell'], 'td');\n      var rows;\n\n      if (data.length) {\n        rows = flattenData.value.map(function (item, idx) {\n          var record = item.record,\n              indent = item.indent,\n              renderIndex = item.index;\n          var key = getRowKey(record, idx);\n          return _createVNode(BodyRow, {\n            \"key\": key,\n            \"rowKey\": key,\n            \"record\": record,\n            \"recordKey\": key,\n            \"index\": idx,\n            \"renderIndex\": renderIndex,\n            \"rowComponent\": trComponent,\n            \"cellComponent\": tdComponent,\n            \"expandedKeys\": expandedKeys,\n            \"customRow\": customRow,\n            \"getRowKey\": getRowKey,\n            \"rowExpandable\": rowExpandable,\n            \"childrenColumnName\": childrenColumnName,\n            \"indent\": indent\n          }, null);\n        });\n      } else {\n        rows = _createVNode(ExpandedRow, {\n          \"expanded\": true,\n          \"class\": \"\".concat(prefixCls, \"-placeholder\"),\n          \"prefixCls\": prefixCls,\n          \"component\": trComponent,\n          \"cellComponent\": tdComponent,\n          \"colSpan\": flattenColumns.length,\n          \"isEmpty\": true\n        }, {\n          default: function _default() {\n            return [(_a = slots.emptyNode) === null || _a === void 0 ? void 0 : _a.call(slots)];\n          }\n        });\n      }\n\n      var columnsKey = getColumnsKey(flattenColumns);\n      return _createVNode(WrapperComponent, {\n        \"class\": \"\".concat(prefixCls, \"-tbody\")\n      }, {\n        default: function _default() {\n          return [measureColumnWidth && _createVNode(\"tr\", {\n            \"aria-hidden\": \"true\",\n            \"class\": \"\".concat(prefixCls, \"-measure-row\"),\n            \"style\": {\n              height: 0,\n              fontSize: 0\n            }\n          }, [columnsKey.map(function (columnKey) {\n            return _createVNode(MeasureCell, {\n              \"key\": columnKey,\n              \"columnKey\": columnKey,\n              \"onColumnResize\": onColumnResize\n            }, null);\n          })]), rows];\n        }\n      });\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}