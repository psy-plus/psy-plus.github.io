{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabindex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n *\n * New api:\n * - listHeight\n * - listItemHeight\n * - component\n *\n * Remove deprecated api:\n * - multiple\n * - tags\n * - combobox\n * - firstActiveValue\n * - dropdownMenuStyle\n * - openClassName (Not list in api)\n *\n * Update:\n * - `backfill` only support `combobox` mode\n * - `combobox` mode not support `labelInValue` since it's meaningless\n * - `getInputElement` only support `combobox` mode\n * - `onChange` return OptionData instead of ReactNode\n * - `filterOption` `onChange` `onSelect` accept OptionData instead of ReactNode\n * - `combobox` mode trigger `onChange` will get `undefined` if no `value` match in Option\n * - `combobox` mode not support `optionLabelProp`\n */\n\nimport BaseSelect, { baseSelectPropsWithoutPrivate, isMultiple } from './BaseSelect';\nimport OptionList from './OptionList';\nimport useOptions from './hooks/useOptions';\nimport { useProvideSelectProps } from './SelectContext';\nimport useId from './hooks/useId';\nimport { fillFieldNames, flattenOptions, injectPropsWithOption } from './utils/valueUtil';\nimport warningProps from './utils/warningPropsUtil';\nimport { toArray } from './utils/commonUtil';\nimport useFilterOptions from './hooks/useFilterOptions';\nimport useCache from './hooks/useCache';\nimport { computed, defineComponent, ref, shallowRef, toRef, watchEffect } from 'vue';\nimport PropTypes from '../_util/vue-types';\nimport { initDefaultProps } from '../_util/props-util';\nimport useMergedState from '../_util/hooks/useMergedState';\nimport useState from '../_util/hooks/useState';\nimport { toReactive } from '../_util/toReactive';\nimport omit from '../_util/omit';\nvar OMIT_DOM_PROPS = ['inputValue'];\nexport function selectProps() {\n  return _extends(_extends({}, baseSelectPropsWithoutPrivate()), {\n    prefixCls: String,\n    id: String,\n    backfill: {\n      type: Boolean,\n      default: undefined\n    },\n    // >>> Field Names\n    fieldNames: Object,\n    // >>> Search\n\n    /** @deprecated Use `searchValue` instead */\n    inputValue: String,\n    searchValue: String,\n    onSearch: Function,\n    autoClearSearchValue: {\n      type: Boolean,\n      default: undefined\n    },\n    // >>> Select\n    onSelect: Function,\n    onDeselect: Function,\n    // >>> Options\n\n    /**\n     * In Select, `false` means do nothing.\n     * In TreeSelect, `false` will highlight match item.\n     * It's by design.\n     */\n    filterOption: {\n      type: [Boolean, Function],\n      default: undefined\n    },\n    filterSort: Function,\n    optionFilterProp: String,\n    optionLabelProp: String,\n    options: Array,\n    defaultActiveFirstOption: {\n      type: Boolean,\n      default: undefined\n    },\n    virtual: {\n      type: Boolean,\n      default: undefined\n    },\n    listHeight: Number,\n    listItemHeight: Number,\n    // >>> Icon\n    menuItemSelectedIcon: PropTypes.any,\n    mode: String,\n    labelInValue: {\n      type: Boolean,\n      default: undefined\n    },\n    value: PropTypes.any,\n    defaultValue: PropTypes.any,\n    onChange: Function,\n    children: Array\n  });\n}\n\nfunction isRawValue(value) {\n  return !value || _typeof(value) !== 'object';\n}\n\nexport default defineComponent({\n  name: 'Select',\n  inheritAttrs: false,\n  props: initDefaultProps(selectProps(), {\n    prefixCls: 'vc-select',\n    autoClearSearchValue: true,\n    listHeight: 200,\n    listItemHeight: 20,\n    dropdownMatchSelectWidth: true\n  }),\n  setup: function setup(props, _ref) {\n    var expose = _ref.expose,\n        attrs = _ref.attrs,\n        slots = _ref.slots;\n    var mergedId = useId(toRef(props, 'id'));\n    var multiple = computed(function () {\n      return isMultiple(props.mode);\n    });\n    var childrenAsData = computed(function () {\n      return !!(!props.options && props.children);\n    });\n    var mergedFilterOption = computed(function () {\n      if (props.filterOption === undefined && props.mode === 'combobox') {\n        return false;\n      }\n\n      return props.filterOption;\n    }); // ========================= FieldNames =========================\n\n    var mergedFieldNames = computed(function () {\n      return fillFieldNames(props.fieldNames, childrenAsData.value);\n    }); // =========================== Search ===========================\n\n    var _useMergedState = useMergedState('', {\n      value: computed(function () {\n        return props.searchValue !== undefined ? props.searchValue : props.inputValue;\n      }),\n      postState: function postState(search) {\n        return search || '';\n      }\n    }),\n        _useMergedState2 = _slicedToArray(_useMergedState, 2),\n        mergedSearchValue = _useMergedState2[0],\n        setSearchValue = _useMergedState2[1]; // =========================== Option ===========================\n\n\n    var parsedOptions = useOptions(toRef(props, 'options'), toRef(props, 'children'), mergedFieldNames);\n    var valueOptions = parsedOptions.valueOptions,\n        labelOptions = parsedOptions.labelOptions,\n        mergedOptions = parsedOptions.options; // ========================= Wrap Value =========================\n\n    var convert2LabelValues = function convert2LabelValues(draftValues) {\n      // Convert to array\n      var valueList = toArray(draftValues); // Convert to labelInValue type\n\n      return valueList.map(function (val) {\n        var _a, _b;\n\n        var rawValue;\n        var rawLabel;\n        var rawKey;\n        var rawDisabled; // Fill label & value\n\n        if (isRawValue(val)) {\n          rawValue = val;\n        } else {\n          rawKey = val.key;\n          rawLabel = val.label;\n          rawValue = (_a = val.value) !== null && _a !== void 0 ? _a : rawKey;\n        }\n\n        var option = valueOptions.value.get(rawValue);\n\n        if (option) {\n          // Fill missing props\n          if (rawLabel === undefined) rawLabel = option === null || option === void 0 ? void 0 : option[props.optionLabelProp || mergedFieldNames.value.label];\n          if (rawKey === undefined) rawKey = (_b = option === null || option === void 0 ? void 0 : option.key) !== null && _b !== void 0 ? _b : rawValue;\n          rawDisabled = option === null || option === void 0 ? void 0 : option.disabled; // Warning if label not same as provided\n          // if (process.env.NODE_ENV !== 'production' && !isRawValue(val)) {\n          //   const optionLabel = option?.[mergedFieldNames.value.label];\n          //   if (optionLabel !== undefined && optionLabel !== rawLabel) {\n          //     warning(false, '`label` of `value` is not same as `label` in Select options.');\n          //   }\n          // }\n        }\n\n        return {\n          label: rawLabel,\n          value: rawValue,\n          key: rawKey,\n          disabled: rawDisabled,\n          option: option\n        };\n      });\n    }; // =========================== Values ===========================\n\n\n    var _useMergedState3 = useMergedState(props.defaultValue, {\n      value: toRef(props, 'value')\n    }),\n        _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n        internalValue = _useMergedState4[0],\n        setInternalValue = _useMergedState4[1]; // Merged value with LabelValueType\n\n\n    var rawLabeledValues = computed(function () {\n      var _a;\n\n      var values = convert2LabelValues(internalValue.value); // combobox no need save value when it's empty\n\n      if (props.mode === 'combobox' && !((_a = values[0]) === null || _a === void 0 ? void 0 : _a.value)) {\n        return [];\n      }\n\n      return values;\n    }); // Fill label with cache to avoid option remove\n\n    var _useCache = useCache(rawLabeledValues, valueOptions),\n        _useCache2 = _slicedToArray(_useCache, 2),\n        mergedValues = _useCache2[0],\n        getMixedOption = _useCache2[1];\n\n    var displayValues = computed(function () {\n      // `null` need show as placeholder instead\n      // https://github.com/ant-design/ant-design/issues/25057\n      if (!props.mode && mergedValues.value.length === 1) {\n        var firstValue = mergedValues.value[0];\n\n        if (firstValue.value === null && (firstValue.label === null || firstValue.label === undefined)) {\n          return [];\n        }\n      }\n\n      return mergedValues.value.map(function (item) {\n        var _a;\n\n        return _extends(_extends({}, item), {\n          label: (_a = typeof item.label === 'function' ? item.label() : item.label) !== null && _a !== void 0 ? _a : item.value\n        });\n      });\n    });\n    /** Convert `displayValues` to raw value type set */\n\n    var rawValues = computed(function () {\n      return new Set(mergedValues.value.map(function (val) {\n        return val.value;\n      }));\n    });\n    watchEffect(function () {\n      var _a;\n\n      if (props.mode === 'combobox') {\n        var strValue = (_a = mergedValues.value[0]) === null || _a === void 0 ? void 0 : _a.value;\n\n        if (strValue !== undefined && strValue !== null) {\n          setSearchValue(String(strValue));\n        }\n      }\n    }, {\n      flush: 'post'\n    }); // ======================= Display Option =======================\n    // Create a placeholder item if not exist in `options`\n\n    var createTagOption = function createTagOption(val, label) {\n      var _ref2;\n\n      var mergedLabel = label !== null && label !== void 0 ? label : val;\n      return _ref2 = {}, _defineProperty(_ref2, mergedFieldNames.value.value, val), _defineProperty(_ref2, mergedFieldNames.value.label, mergedLabel), _ref2;\n    }; // Fill tag as option if mode is `tags`\n\n\n    var filledTagOptions = shallowRef();\n    watchEffect(function () {\n      if (props.mode !== 'tags') {\n        filledTagOptions.value = mergedOptions.value;\n        return;\n      } // >>> Tag mode\n\n\n      var cloneOptions = mergedOptions.value.slice(); // Check if value exist in options (include new patch item)\n\n      var existOptions = function existOptions(val) {\n        return valueOptions.value.has(val);\n      }; // Fill current value as option\n\n\n      _toConsumableArray(mergedValues.value).sort(function (a, b) {\n        return a.value < b.value ? -1 : 1;\n      }).forEach(function (item) {\n        var val = item.value;\n\n        if (!existOptions(val)) {\n          cloneOptions.push(createTagOption(val, item.label));\n        }\n      });\n\n      filledTagOptions.value = cloneOptions;\n    });\n    var filteredOptions = useFilterOptions(filledTagOptions, mergedFieldNames, mergedSearchValue, mergedFilterOption, toRef(props, 'optionFilterProp')); // Fill options with search value if needed\n\n    var filledSearchOptions = computed(function () {\n      if (props.mode !== 'tags' || !mergedSearchValue.value || filteredOptions.value.some(function (item) {\n        return item[props.optionFilterProp || 'value'] === mergedSearchValue.value;\n      })) {\n        return filteredOptions.value;\n      } // Fill search value as option\n\n\n      return [createTagOption(mergedSearchValue.value)].concat(_toConsumableArray(filteredOptions.value));\n    });\n    var orderedFilteredOptions = computed(function () {\n      if (!props.filterSort) {\n        return filledSearchOptions.value;\n      }\n\n      return _toConsumableArray(filledSearchOptions.value).sort(function (a, b) {\n        return props.filterSort(a, b);\n      });\n    });\n    var displayOptions = computed(function () {\n      return flattenOptions(orderedFilteredOptions.value, {\n        fieldNames: mergedFieldNames.value,\n        childrenAsData: childrenAsData.value\n      });\n    }); // =========================== Change ===========================\n\n    var triggerChange = function triggerChange(values) {\n      var labeledValues = convert2LabelValues(values);\n      setInternalValue(labeledValues);\n\n      if (props.onChange && ( // Trigger event only when value changed\n      labeledValues.length !== mergedValues.value.length || labeledValues.some(function (newVal, index) {\n        var _a;\n\n        return ((_a = mergedValues.value[index]) === null || _a === void 0 ? void 0 : _a.value) !== (newVal === null || newVal === void 0 ? void 0 : newVal.value);\n      }))) {\n        var returnValues = props.labelInValue ? labeledValues.map(function (v) {\n          return _extends(_extends({}, v), {\n            originLabel: v.label,\n            label: typeof v.label === 'function' ? v.label() : v.label\n          });\n        }) : labeledValues.map(function (v) {\n          return v.value;\n        });\n        var returnOptions = labeledValues.map(function (v) {\n          return injectPropsWithOption(getMixedOption(v.value));\n        });\n        props.onChange( // Value\n        multiple.value ? returnValues : returnValues[0], // Option\n        multiple.value ? returnOptions : returnOptions[0]);\n      }\n    }; // ======================= Accessibility ========================\n\n\n    var _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        activeValue = _useState2[0],\n        setActiveValue = _useState2[1];\n\n    var _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        accessibilityIndex = _useState4[0],\n        setAccessibilityIndex = _useState4[1];\n\n    var mergedDefaultActiveFirstOption = computed(function () {\n      return props.defaultActiveFirstOption !== undefined ? props.defaultActiveFirstOption : props.mode !== 'combobox';\n    });\n\n    var onActiveValue = function onActiveValue(active, index) {\n      var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n          _ref3$source = _ref3.source,\n          source = _ref3$source === void 0 ? 'keyboard' : _ref3$source;\n\n      setAccessibilityIndex(index);\n\n      if (props.backfill && props.mode === 'combobox' && active !== null && source === 'keyboard') {\n        setActiveValue(String(active));\n      }\n    }; // ========================= OptionList =========================\n\n\n    var triggerSelect = function triggerSelect(val, selected) {\n      var getSelectEnt = function getSelectEnt() {\n        var _a;\n\n        var option = getMixedOption(val);\n        var originLabel = option === null || option === void 0 ? void 0 : option[mergedFieldNames.value.label];\n        return [props.labelInValue ? {\n          label: typeof originLabel === 'function' ? originLabel() : originLabel,\n          originLabel: originLabel,\n          value: val,\n          key: (_a = option === null || option === void 0 ? void 0 : option.key) !== null && _a !== void 0 ? _a : val\n        } : val, injectPropsWithOption(option)];\n      };\n\n      if (selected && props.onSelect) {\n        var _getSelectEnt = getSelectEnt(),\n            _getSelectEnt2 = _slicedToArray(_getSelectEnt, 2),\n            wrappedValue = _getSelectEnt2[0],\n            option = _getSelectEnt2[1];\n\n        props.onSelect(wrappedValue, option);\n      } else if (!selected && props.onDeselect) {\n        var _getSelectEnt3 = getSelectEnt(),\n            _getSelectEnt4 = _slicedToArray(_getSelectEnt3, 2),\n            _wrappedValue = _getSelectEnt4[0],\n            _option = _getSelectEnt4[1];\n\n        props.onDeselect(_wrappedValue, _option);\n      }\n    }; // Used for OptionList selection\n\n\n    var onInternalSelect = function onInternalSelect(val, info) {\n      var cloneValues; // Single mode always trigger select only with option list\n\n      var mergedSelect = multiple.value ? info.selected : true;\n\n      if (mergedSelect) {\n        cloneValues = multiple.value ? [].concat(_toConsumableArray(mergedValues.value), [val]) : [val];\n      } else {\n        cloneValues = mergedValues.value.filter(function (v) {\n          return v.value !== val;\n        });\n      }\n\n      triggerChange(cloneValues);\n      triggerSelect(val, mergedSelect); // Clean search value if single or configured\n\n      if (props.mode === 'combobox') {\n        // setSearchValue(String(val));\n        setActiveValue('');\n      } else if (!multiple.value || props.autoClearSearchValue) {\n        setSearchValue('');\n        setActiveValue('');\n      }\n    }; // ======================= Display Change =======================\n    // BaseSelect display values change\n\n\n    var onDisplayValuesChange = function onDisplayValuesChange(nextValues, info) {\n      triggerChange(nextValues);\n\n      if (info.type === 'remove' || info.type === 'clear') {\n        info.values.forEach(function (item) {\n          triggerSelect(item.value, false);\n        });\n      }\n    }; // =========================== Search ===========================\n\n\n    var onInternalSearch = function onInternalSearch(searchText, info) {\n      var _a;\n\n      setSearchValue(searchText);\n      setActiveValue(null); // [Submit] Tag mode should flush input\n\n      if (info.source === 'submit') {\n        var formatted = (searchText || '').trim(); // prevent empty tags from appearing when you click the Enter button\n\n        if (formatted) {\n          var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues.value), [formatted])));\n          triggerChange(newRawValues);\n          triggerSelect(formatted, true);\n          setSearchValue('');\n        }\n\n        return;\n      }\n\n      if (info.source !== 'blur') {\n        if (props.mode === 'combobox') {\n          triggerChange(searchText);\n        }\n\n        (_a = props.onSearch) === null || _a === void 0 ? void 0 : _a.call(props, searchText);\n      }\n    };\n\n    var onInternalSearchSplit = function onInternalSearchSplit(words) {\n      var patchValues = words;\n\n      if (props.mode !== 'tags') {\n        patchValues = words.map(function (word) {\n          var opt = labelOptions.value.get(word);\n          return opt === null || opt === void 0 ? void 0 : opt.value;\n        }).filter(function (val) {\n          return val !== undefined;\n        });\n      }\n\n      var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues.value), _toConsumableArray(patchValues))));\n      triggerChange(newRawValues);\n      newRawValues.forEach(function (newRawValue) {\n        triggerSelect(newRawValue, true);\n      });\n    };\n\n    var realVirtual = computed(function () {\n      return props.virtual !== false && props.dropdownMatchSelectWidth !== false;\n    });\n    useProvideSelectProps(toReactive(_extends(_extends({}, parsedOptions), {\n      flattenOptions: displayOptions,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      onSelect: onInternalSelect,\n      menuItemSelectedIcon: toRef(props, 'menuItemSelectedIcon'),\n      rawValues: rawValues,\n      fieldNames: mergedFieldNames,\n      virtual: realVirtual,\n      listHeight: toRef(props, 'listHeight'),\n      listItemHeight: toRef(props, 'listItemHeight'),\n      childrenAsData: childrenAsData\n    }))); // ========================== Warning ===========================\n\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(function () {\n        warningProps(props);\n      }, {\n        flush: 'post'\n      });\n    }\n\n    var selectRef = ref();\n    expose({\n      focus: function focus() {\n        var _a;\n\n        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: function blur() {\n        var _a;\n\n        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      },\n      scrollTo: function scrollTo(arg) {\n        var _a;\n\n        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.scrollTo(arg);\n      }\n    });\n    var pickProps = computed(function () {\n      return omit(props, ['id', 'mode', 'prefixCls', 'backfill', 'fieldNames', // Search\n      'inputValue', 'searchValue', 'onSearch', 'autoClearSearchValue', // Select\n      'onSelect', 'onDeselect', 'dropdownMatchSelectWidth', // Options\n      'filterOption', 'filterSort', 'optionFilterProp', 'optionLabelProp', 'options', 'children', 'defaultActiveFirstOption', 'menuItemSelectedIcon', 'virtual', 'listHeight', 'listItemHeight', // Value\n      'value', 'defaultValue', 'labelInValue', 'onChange']);\n    });\n    return function () {\n      return _createVNode(BaseSelect, _objectSpread(_objectSpread(_objectSpread({}, pickProps.value), attrs), {}, {\n        \"id\": mergedId,\n        \"prefixCls\": props.prefixCls,\n        \"ref\": selectRef,\n        \"omitDomProps\": OMIT_DOM_PROPS,\n        \"mode\": props.mode,\n        \"displayValues\": displayValues.value,\n        \"onDisplayValuesChange\": onDisplayValuesChange,\n        \"searchValue\": mergedSearchValue.value,\n        \"onSearch\": onInternalSearch,\n        \"onSearchSplit\": onInternalSearchSplit,\n        \"dropdownMatchSelectWidth\": props.dropdownMatchSelectWidth,\n        \"OptionList\": OptionList,\n        \"emptyOptions\": !displayOptions.value.length,\n        \"activeValue\": activeValue.value,\n        \"activeDescendantId\": \"\".concat(mergedId, \"_list_\").concat(accessibilityIndex.value)\n      }), slots);\n    };\n  }\n});","map":{"version":3,"names":["_objectSpread","_toConsumableArray","_defineProperty","_slicedToArray","_typeof","_extends","createVNode","_createVNode","resolveDirective","_resolveDirective","BaseSelect","baseSelectPropsWithoutPrivate","isMultiple","OptionList","useOptions","useProvideSelectProps","useId","fillFieldNames","flattenOptions","injectPropsWithOption","warningProps","toArray","useFilterOptions","useCache","computed","defineComponent","ref","shallowRef","toRef","watchEffect","PropTypes","initDefaultProps","useMergedState","useState","toReactive","omit","OMIT_DOM_PROPS","selectProps","prefixCls","String","id","backfill","type","Boolean","default","undefined","fieldNames","Object","inputValue","searchValue","onSearch","Function","autoClearSearchValue","onSelect","onDeselect","filterOption","filterSort","optionFilterProp","optionLabelProp","options","Array","defaultActiveFirstOption","virtual","listHeight","Number","listItemHeight","menuItemSelectedIcon","any","mode","labelInValue","value","defaultValue","onChange","children","isRawValue","name","inheritAttrs","props","dropdownMatchSelectWidth","setup","_ref","expose","attrs","slots","mergedId","multiple","childrenAsData","mergedFilterOption","mergedFieldNames","_useMergedState","postState","search","_useMergedState2","mergedSearchValue","setSearchValue","parsedOptions","valueOptions","labelOptions","mergedOptions","convert2LabelValues","draftValues","valueList","map","val","_a","_b","rawValue","rawLabel","rawKey","rawDisabled","key","label","option","get","disabled","_useMergedState3","_useMergedState4","internalValue","setInternalValue","rawLabeledValues","values","_useCache","_useCache2","mergedValues","getMixedOption","displayValues","length","firstValue","item","rawValues","Set","strValue","flush","createTagOption","_ref2","mergedLabel","filledTagOptions","cloneOptions","slice","existOptions","has","sort","a","b","forEach","push","filteredOptions","filledSearchOptions","some","concat","orderedFilteredOptions","displayOptions","triggerChange","labeledValues","newVal","index","returnValues","v","originLabel","returnOptions","_useState","_useState2","activeValue","setActiveValue","_useState3","_useState4","accessibilityIndex","setAccessibilityIndex","mergedDefaultActiveFirstOption","onActiveValue","active","_ref3","arguments","_ref3$source","source","triggerSelect","selected","getSelectEnt","_getSelectEnt","_getSelectEnt2","wrappedValue","_getSelectEnt3","_getSelectEnt4","_wrappedValue","_option","onInternalSelect","info","cloneValues","mergedSelect","filter","onDisplayValuesChange","nextValues","onInternalSearch","searchText","formatted","trim","newRawValues","from","call","onInternalSearchSplit","words","patchValues","word","opt","newRawValue","realVirtual","process","env","NODE_ENV","selectRef","focus","blur","scrollTo","arg","pickProps"],"sources":["/Users/cinder/Desktop/Psy+/psyplusweb/node_modules/ant-design-vue/es/vc-select/Select.js"],"sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createVNode as _createVNode, resolveDirective as _resolveDirective } from \"vue\";\n\n/**\n * To match accessibility requirement, we always provide an input in the component.\n * Other element will not set `tabindex` to avoid `onBlur` sequence problem.\n * For focused select, we set `aria-live=\"polite\"` to update the accessibility content.\n *\n * ref:\n * - keyboard: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/listbox_role#Keyboard_interactions\n *\n * New api:\n * - listHeight\n * - listItemHeight\n * - component\n *\n * Remove deprecated api:\n * - multiple\n * - tags\n * - combobox\n * - firstActiveValue\n * - dropdownMenuStyle\n * - openClassName (Not list in api)\n *\n * Update:\n * - `backfill` only support `combobox` mode\n * - `combobox` mode not support `labelInValue` since it's meaningless\n * - `getInputElement` only support `combobox` mode\n * - `onChange` return OptionData instead of ReactNode\n * - `filterOption` `onChange` `onSelect` accept OptionData instead of ReactNode\n * - `combobox` mode trigger `onChange` will get `undefined` if no `value` match in Option\n * - `combobox` mode not support `optionLabelProp`\n */\nimport BaseSelect, { baseSelectPropsWithoutPrivate, isMultiple } from './BaseSelect';\nimport OptionList from './OptionList';\nimport useOptions from './hooks/useOptions';\nimport { useProvideSelectProps } from './SelectContext';\nimport useId from './hooks/useId';\nimport { fillFieldNames, flattenOptions, injectPropsWithOption } from './utils/valueUtil';\nimport warningProps from './utils/warningPropsUtil';\nimport { toArray } from './utils/commonUtil';\nimport useFilterOptions from './hooks/useFilterOptions';\nimport useCache from './hooks/useCache';\nimport { computed, defineComponent, ref, shallowRef, toRef, watchEffect } from 'vue';\nimport PropTypes from '../_util/vue-types';\nimport { initDefaultProps } from '../_util/props-util';\nimport useMergedState from '../_util/hooks/useMergedState';\nimport useState from '../_util/hooks/useState';\nimport { toReactive } from '../_util/toReactive';\nimport omit from '../_util/omit';\nvar OMIT_DOM_PROPS = ['inputValue'];\nexport function selectProps() {\n  return _extends(_extends({}, baseSelectPropsWithoutPrivate()), {\n    prefixCls: String,\n    id: String,\n    backfill: {\n      type: Boolean,\n      default: undefined\n    },\n    // >>> Field Names\n    fieldNames: Object,\n    // >>> Search\n\n    /** @deprecated Use `searchValue` instead */\n    inputValue: String,\n    searchValue: String,\n    onSearch: Function,\n    autoClearSearchValue: {\n      type: Boolean,\n      default: undefined\n    },\n    // >>> Select\n    onSelect: Function,\n    onDeselect: Function,\n    // >>> Options\n\n    /**\n     * In Select, `false` means do nothing.\n     * In TreeSelect, `false` will highlight match item.\n     * It's by design.\n     */\n    filterOption: {\n      type: [Boolean, Function],\n      default: undefined\n    },\n    filterSort: Function,\n    optionFilterProp: String,\n    optionLabelProp: String,\n    options: Array,\n    defaultActiveFirstOption: {\n      type: Boolean,\n      default: undefined\n    },\n    virtual: {\n      type: Boolean,\n      default: undefined\n    },\n    listHeight: Number,\n    listItemHeight: Number,\n    // >>> Icon\n    menuItemSelectedIcon: PropTypes.any,\n    mode: String,\n    labelInValue: {\n      type: Boolean,\n      default: undefined\n    },\n    value: PropTypes.any,\n    defaultValue: PropTypes.any,\n    onChange: Function,\n    children: Array\n  });\n}\n\nfunction isRawValue(value) {\n  return !value || _typeof(value) !== 'object';\n}\n\nexport default defineComponent({\n  name: 'Select',\n  inheritAttrs: false,\n  props: initDefaultProps(selectProps(), {\n    prefixCls: 'vc-select',\n    autoClearSearchValue: true,\n    listHeight: 200,\n    listItemHeight: 20,\n    dropdownMatchSelectWidth: true\n  }),\n  setup: function setup(props, _ref) {\n    var expose = _ref.expose,\n        attrs = _ref.attrs,\n        slots = _ref.slots;\n    var mergedId = useId(toRef(props, 'id'));\n    var multiple = computed(function () {\n      return isMultiple(props.mode);\n    });\n    var childrenAsData = computed(function () {\n      return !!(!props.options && props.children);\n    });\n    var mergedFilterOption = computed(function () {\n      if (props.filterOption === undefined && props.mode === 'combobox') {\n        return false;\n      }\n\n      return props.filterOption;\n    }); // ========================= FieldNames =========================\n\n    var mergedFieldNames = computed(function () {\n      return fillFieldNames(props.fieldNames, childrenAsData.value);\n    }); // =========================== Search ===========================\n\n    var _useMergedState = useMergedState('', {\n      value: computed(function () {\n        return props.searchValue !== undefined ? props.searchValue : props.inputValue;\n      }),\n      postState: function postState(search) {\n        return search || '';\n      }\n    }),\n        _useMergedState2 = _slicedToArray(_useMergedState, 2),\n        mergedSearchValue = _useMergedState2[0],\n        setSearchValue = _useMergedState2[1]; // =========================== Option ===========================\n\n\n    var parsedOptions = useOptions(toRef(props, 'options'), toRef(props, 'children'), mergedFieldNames);\n    var valueOptions = parsedOptions.valueOptions,\n        labelOptions = parsedOptions.labelOptions,\n        mergedOptions = parsedOptions.options; // ========================= Wrap Value =========================\n\n    var convert2LabelValues = function convert2LabelValues(draftValues) {\n      // Convert to array\n      var valueList = toArray(draftValues); // Convert to labelInValue type\n\n      return valueList.map(function (val) {\n        var _a, _b;\n\n        var rawValue;\n        var rawLabel;\n        var rawKey;\n        var rawDisabled; // Fill label & value\n\n        if (isRawValue(val)) {\n          rawValue = val;\n        } else {\n          rawKey = val.key;\n          rawLabel = val.label;\n          rawValue = (_a = val.value) !== null && _a !== void 0 ? _a : rawKey;\n        }\n\n        var option = valueOptions.value.get(rawValue);\n\n        if (option) {\n          // Fill missing props\n          if (rawLabel === undefined) rawLabel = option === null || option === void 0 ? void 0 : option[props.optionLabelProp || mergedFieldNames.value.label];\n          if (rawKey === undefined) rawKey = (_b = option === null || option === void 0 ? void 0 : option.key) !== null && _b !== void 0 ? _b : rawValue;\n          rawDisabled = option === null || option === void 0 ? void 0 : option.disabled; // Warning if label not same as provided\n          // if (process.env.NODE_ENV !== 'production' && !isRawValue(val)) {\n          //   const optionLabel = option?.[mergedFieldNames.value.label];\n          //   if (optionLabel !== undefined && optionLabel !== rawLabel) {\n          //     warning(false, '`label` of `value` is not same as `label` in Select options.');\n          //   }\n          // }\n        }\n\n        return {\n          label: rawLabel,\n          value: rawValue,\n          key: rawKey,\n          disabled: rawDisabled,\n          option: option\n        };\n      });\n    }; // =========================== Values ===========================\n\n\n    var _useMergedState3 = useMergedState(props.defaultValue, {\n      value: toRef(props, 'value')\n    }),\n        _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n        internalValue = _useMergedState4[0],\n        setInternalValue = _useMergedState4[1]; // Merged value with LabelValueType\n\n\n    var rawLabeledValues = computed(function () {\n      var _a;\n\n      var values = convert2LabelValues(internalValue.value); // combobox no need save value when it's empty\n\n      if (props.mode === 'combobox' && !((_a = values[0]) === null || _a === void 0 ? void 0 : _a.value)) {\n        return [];\n      }\n\n      return values;\n    }); // Fill label with cache to avoid option remove\n\n    var _useCache = useCache(rawLabeledValues, valueOptions),\n        _useCache2 = _slicedToArray(_useCache, 2),\n        mergedValues = _useCache2[0],\n        getMixedOption = _useCache2[1];\n\n    var displayValues = computed(function () {\n      // `null` need show as placeholder instead\n      // https://github.com/ant-design/ant-design/issues/25057\n      if (!props.mode && mergedValues.value.length === 1) {\n        var firstValue = mergedValues.value[0];\n\n        if (firstValue.value === null && (firstValue.label === null || firstValue.label === undefined)) {\n          return [];\n        }\n      }\n\n      return mergedValues.value.map(function (item) {\n        var _a;\n\n        return _extends(_extends({}, item), {\n          label: (_a = typeof item.label === 'function' ? item.label() : item.label) !== null && _a !== void 0 ? _a : item.value\n        });\n      });\n    });\n    /** Convert `displayValues` to raw value type set */\n\n    var rawValues = computed(function () {\n      return new Set(mergedValues.value.map(function (val) {\n        return val.value;\n      }));\n    });\n    watchEffect(function () {\n      var _a;\n\n      if (props.mode === 'combobox') {\n        var strValue = (_a = mergedValues.value[0]) === null || _a === void 0 ? void 0 : _a.value;\n\n        if (strValue !== undefined && strValue !== null) {\n          setSearchValue(String(strValue));\n        }\n      }\n    }, {\n      flush: 'post'\n    }); // ======================= Display Option =======================\n    // Create a placeholder item if not exist in `options`\n\n    var createTagOption = function createTagOption(val, label) {\n      var _ref2;\n\n      var mergedLabel = label !== null && label !== void 0 ? label : val;\n      return _ref2 = {}, _defineProperty(_ref2, mergedFieldNames.value.value, val), _defineProperty(_ref2, mergedFieldNames.value.label, mergedLabel), _ref2;\n    }; // Fill tag as option if mode is `tags`\n\n\n    var filledTagOptions = shallowRef();\n    watchEffect(function () {\n      if (props.mode !== 'tags') {\n        filledTagOptions.value = mergedOptions.value;\n        return;\n      } // >>> Tag mode\n\n\n      var cloneOptions = mergedOptions.value.slice(); // Check if value exist in options (include new patch item)\n\n      var existOptions = function existOptions(val) {\n        return valueOptions.value.has(val);\n      }; // Fill current value as option\n\n\n      _toConsumableArray(mergedValues.value).sort(function (a, b) {\n        return a.value < b.value ? -1 : 1;\n      }).forEach(function (item) {\n        var val = item.value;\n\n        if (!existOptions(val)) {\n          cloneOptions.push(createTagOption(val, item.label));\n        }\n      });\n\n      filledTagOptions.value = cloneOptions;\n    });\n    var filteredOptions = useFilterOptions(filledTagOptions, mergedFieldNames, mergedSearchValue, mergedFilterOption, toRef(props, 'optionFilterProp')); // Fill options with search value if needed\n\n    var filledSearchOptions = computed(function () {\n      if (props.mode !== 'tags' || !mergedSearchValue.value || filteredOptions.value.some(function (item) {\n        return item[props.optionFilterProp || 'value'] === mergedSearchValue.value;\n      })) {\n        return filteredOptions.value;\n      } // Fill search value as option\n\n\n      return [createTagOption(mergedSearchValue.value)].concat(_toConsumableArray(filteredOptions.value));\n    });\n    var orderedFilteredOptions = computed(function () {\n      if (!props.filterSort) {\n        return filledSearchOptions.value;\n      }\n\n      return _toConsumableArray(filledSearchOptions.value).sort(function (a, b) {\n        return props.filterSort(a, b);\n      });\n    });\n    var displayOptions = computed(function () {\n      return flattenOptions(orderedFilteredOptions.value, {\n        fieldNames: mergedFieldNames.value,\n        childrenAsData: childrenAsData.value\n      });\n    }); // =========================== Change ===========================\n\n    var triggerChange = function triggerChange(values) {\n      var labeledValues = convert2LabelValues(values);\n      setInternalValue(labeledValues);\n\n      if (props.onChange && ( // Trigger event only when value changed\n      labeledValues.length !== mergedValues.value.length || labeledValues.some(function (newVal, index) {\n        var _a;\n\n        return ((_a = mergedValues.value[index]) === null || _a === void 0 ? void 0 : _a.value) !== (newVal === null || newVal === void 0 ? void 0 : newVal.value);\n      }))) {\n        var returnValues = props.labelInValue ? labeledValues.map(function (v) {\n          return _extends(_extends({}, v), {\n            originLabel: v.label,\n            label: typeof v.label === 'function' ? v.label() : v.label\n          });\n        }) : labeledValues.map(function (v) {\n          return v.value;\n        });\n        var returnOptions = labeledValues.map(function (v) {\n          return injectPropsWithOption(getMixedOption(v.value));\n        });\n        props.onChange( // Value\n        multiple.value ? returnValues : returnValues[0], // Option\n        multiple.value ? returnOptions : returnOptions[0]);\n      }\n    }; // ======================= Accessibility ========================\n\n\n    var _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        activeValue = _useState2[0],\n        setActiveValue = _useState2[1];\n\n    var _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        accessibilityIndex = _useState4[0],\n        setAccessibilityIndex = _useState4[1];\n\n    var mergedDefaultActiveFirstOption = computed(function () {\n      return props.defaultActiveFirstOption !== undefined ? props.defaultActiveFirstOption : props.mode !== 'combobox';\n    });\n\n    var onActiveValue = function onActiveValue(active, index) {\n      var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n          _ref3$source = _ref3.source,\n          source = _ref3$source === void 0 ? 'keyboard' : _ref3$source;\n\n      setAccessibilityIndex(index);\n\n      if (props.backfill && props.mode === 'combobox' && active !== null && source === 'keyboard') {\n        setActiveValue(String(active));\n      }\n    }; // ========================= OptionList =========================\n\n\n    var triggerSelect = function triggerSelect(val, selected) {\n      var getSelectEnt = function getSelectEnt() {\n        var _a;\n\n        var option = getMixedOption(val);\n        var originLabel = option === null || option === void 0 ? void 0 : option[mergedFieldNames.value.label];\n        return [props.labelInValue ? {\n          label: typeof originLabel === 'function' ? originLabel() : originLabel,\n          originLabel: originLabel,\n          value: val,\n          key: (_a = option === null || option === void 0 ? void 0 : option.key) !== null && _a !== void 0 ? _a : val\n        } : val, injectPropsWithOption(option)];\n      };\n\n      if (selected && props.onSelect) {\n        var _getSelectEnt = getSelectEnt(),\n            _getSelectEnt2 = _slicedToArray(_getSelectEnt, 2),\n            wrappedValue = _getSelectEnt2[0],\n            option = _getSelectEnt2[1];\n\n        props.onSelect(wrappedValue, option);\n      } else if (!selected && props.onDeselect) {\n        var _getSelectEnt3 = getSelectEnt(),\n            _getSelectEnt4 = _slicedToArray(_getSelectEnt3, 2),\n            _wrappedValue = _getSelectEnt4[0],\n            _option = _getSelectEnt4[1];\n\n        props.onDeselect(_wrappedValue, _option);\n      }\n    }; // Used for OptionList selection\n\n\n    var onInternalSelect = function onInternalSelect(val, info) {\n      var cloneValues; // Single mode always trigger select only with option list\n\n      var mergedSelect = multiple.value ? info.selected : true;\n\n      if (mergedSelect) {\n        cloneValues = multiple.value ? [].concat(_toConsumableArray(mergedValues.value), [val]) : [val];\n      } else {\n        cloneValues = mergedValues.value.filter(function (v) {\n          return v.value !== val;\n        });\n      }\n\n      triggerChange(cloneValues);\n      triggerSelect(val, mergedSelect); // Clean search value if single or configured\n\n      if (props.mode === 'combobox') {\n        // setSearchValue(String(val));\n        setActiveValue('');\n      } else if (!multiple.value || props.autoClearSearchValue) {\n        setSearchValue('');\n        setActiveValue('');\n      }\n    }; // ======================= Display Change =======================\n    // BaseSelect display values change\n\n\n    var onDisplayValuesChange = function onDisplayValuesChange(nextValues, info) {\n      triggerChange(nextValues);\n\n      if (info.type === 'remove' || info.type === 'clear') {\n        info.values.forEach(function (item) {\n          triggerSelect(item.value, false);\n        });\n      }\n    }; // =========================== Search ===========================\n\n\n    var onInternalSearch = function onInternalSearch(searchText, info) {\n      var _a;\n\n      setSearchValue(searchText);\n      setActiveValue(null); // [Submit] Tag mode should flush input\n\n      if (info.source === 'submit') {\n        var formatted = (searchText || '').trim(); // prevent empty tags from appearing when you click the Enter button\n\n        if (formatted) {\n          var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues.value), [formatted])));\n          triggerChange(newRawValues);\n          triggerSelect(formatted, true);\n          setSearchValue('');\n        }\n\n        return;\n      }\n\n      if (info.source !== 'blur') {\n        if (props.mode === 'combobox') {\n          triggerChange(searchText);\n        }\n\n        (_a = props.onSearch) === null || _a === void 0 ? void 0 : _a.call(props, searchText);\n      }\n    };\n\n    var onInternalSearchSplit = function onInternalSearchSplit(words) {\n      var patchValues = words;\n\n      if (props.mode !== 'tags') {\n        patchValues = words.map(function (word) {\n          var opt = labelOptions.value.get(word);\n          return opt === null || opt === void 0 ? void 0 : opt.value;\n        }).filter(function (val) {\n          return val !== undefined;\n        });\n      }\n\n      var newRawValues = Array.from(new Set([].concat(_toConsumableArray(rawValues.value), _toConsumableArray(patchValues))));\n      triggerChange(newRawValues);\n      newRawValues.forEach(function (newRawValue) {\n        triggerSelect(newRawValue, true);\n      });\n    };\n\n    var realVirtual = computed(function () {\n      return props.virtual !== false && props.dropdownMatchSelectWidth !== false;\n    });\n    useProvideSelectProps(toReactive(_extends(_extends({}, parsedOptions), {\n      flattenOptions: displayOptions,\n      onActiveValue: onActiveValue,\n      defaultActiveFirstOption: mergedDefaultActiveFirstOption,\n      onSelect: onInternalSelect,\n      menuItemSelectedIcon: toRef(props, 'menuItemSelectedIcon'),\n      rawValues: rawValues,\n      fieldNames: mergedFieldNames,\n      virtual: realVirtual,\n      listHeight: toRef(props, 'listHeight'),\n      listItemHeight: toRef(props, 'listItemHeight'),\n      childrenAsData: childrenAsData\n    }))); // ========================== Warning ===========================\n\n    if (process.env.NODE_ENV !== 'production') {\n      watchEffect(function () {\n        warningProps(props);\n      }, {\n        flush: 'post'\n      });\n    }\n\n    var selectRef = ref();\n    expose({\n      focus: function focus() {\n        var _a;\n\n        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.focus();\n      },\n      blur: function blur() {\n        var _a;\n\n        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.blur();\n      },\n      scrollTo: function scrollTo(arg) {\n        var _a;\n\n        (_a = selectRef.value) === null || _a === void 0 ? void 0 : _a.scrollTo(arg);\n      }\n    });\n    var pickProps = computed(function () {\n      return omit(props, ['id', 'mode', 'prefixCls', 'backfill', 'fieldNames', // Search\n      'inputValue', 'searchValue', 'onSearch', 'autoClearSearchValue', // Select\n      'onSelect', 'onDeselect', 'dropdownMatchSelectWidth', // Options\n      'filterOption', 'filterSort', 'optionFilterProp', 'optionLabelProp', 'options', 'children', 'defaultActiveFirstOption', 'menuItemSelectedIcon', 'virtual', 'listHeight', 'listItemHeight', // Value\n      'value', 'defaultValue', 'labelInValue', 'onChange']);\n    });\n    return function () {\n      return _createVNode(BaseSelect, _objectSpread(_objectSpread(_objectSpread({}, pickProps.value), attrs), {}, {\n        \"id\": mergedId,\n        \"prefixCls\": props.prefixCls,\n        \"ref\": selectRef,\n        \"omitDomProps\": OMIT_DOM_PROPS,\n        \"mode\": props.mode,\n        \"displayValues\": displayValues.value,\n        \"onDisplayValuesChange\": onDisplayValuesChange,\n        \"searchValue\": mergedSearchValue.value,\n        \"onSearch\": onInternalSearch,\n        \"onSearchSplit\": onInternalSearchSplit,\n        \"dropdownMatchSelectWidth\": props.dropdownMatchSelectWidth,\n        \"OptionList\": OptionList,\n        \"emptyOptions\": !displayOptions.value.length,\n        \"activeValue\": activeValue.value,\n        \"activeDescendantId\": \"\".concat(mergedId, \"_list_\").concat(accessibilityIndex.value)\n      }), slots);\n    };\n  }\n});"],"mappings":"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"},"metadata":{},"sourceType":"module"}